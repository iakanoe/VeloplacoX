

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 10 23:11:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F2550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	opt stack 0
    68  000800  00                 	db	0
    69  000801                     _channels:
    70                           	opt stack 0
    71  000801  04                 	db	4
    72  000802  03                 	db	3
    73  000803  02                 	db	2
    74  000804  01                 	db	1
    75  000805  00                 	db	0
    76  000806                     __end_of_channels:
    77                           	opt stack 0
    78  0000                     _PORTBbits	set	3969
    79  0000                     _LATBbits	set	3978
    80  0000                     _TRISBbits	set	3987
    81  0000                     _T0CON	set	4053
    82  0000                     _INTCONbits	set	4082
    83  0000                     _T2CON	set	4042
    84  0000                     _CCP2CONbits	set	4026
    85  0000                     _CCP1CONbits	set	4029
    86  0000                     _CCPR2L	set	4027
    87  0000                     _CCPR1L	set	4030
    88  0000                     _PR2	set	4043
    89  0000                     _LATCbits	set	3979
    90  0000                     _TRISCbits	set	3988
    91  0000                     _ADRESL	set	4035
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _PIE1bits	set	3997
    95  0000                     _PIR1bits	set	3998
    96  0000                     _ADCON1	set	4033
    97                           
    98                           ; #config settings
    99  000806  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  000BC2                     __pcinit:
   103                           	opt stack 0
   104  000BC2                     start_initialization:
   105                           	opt stack 0
   106  000BC2                     __initialization:
   107                           	opt stack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (18 bytes)
   110  000BC2  EE00  F024         	lfsr	0,__pbssCOMRAM
   111  000BC6  0E12               	movlw	18
   112  000BC8                     clear_0:
   113  000BC8  6AEE               	clrf	postinc0,c
   114  000BCA  06E8               	decf	wreg,f,c
   115  000BCC  E1FD               	bnz	clear_0
   116  000BCE                     end_of_initialization:
   117                           	opt stack 0
   118  000BCE                     __end_of__initialization:
   119                           	opt stack 0
   120  000BCE  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  000BD0  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  000BD2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123  000BD4  6EF8               	movwf	tblptru,c
   124  000BD6  0100               	movlb	0
   125  000BD8  EFEE  F005         	goto	_main	;jump to C main() function
   126                           tblptru	equ	0xFF8
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	bssCOMRAM
   131  000024                     __pbssCOMRAM:
   132                           	opt stack 0
   133  000024                     _data:
   134                           	opt stack 0
   135  000024                     	ds	10
   136  00002E                     _millisCounter:
   137                           	opt stack 0
   138  00002E                     	ds	4
   139  000032                     _fractionCounter:
   140                           	opt stack 0
   141  000032                     	ds	2
   142  000034                     loop@status:
   143                           	opt stack 0
   144  000034                     	ds	1
   145  000035                     _actualChannel:
   146                           	opt stack 0
   147  000035                     	ds	1
   148                           tblptru	equ	0xFF8
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           
   152                           	psect	cstackCOMRAM
   153  000001                     __pcstackCOMRAM:
   154                           	opt stack 0
   155  000001                     ??_cnyInterrupt:
   156  000001                     
   157                           ; 1 bytes @ 0x0
   158  000001                     	ds	3
   159  000004                     ??_ISR:
   160                           
   161                           ; 1 bytes @ 0x3
   162  000004                     	ds	18
   163  000016                     ??_initCNY:
   164  000016                     ?___awdiv:
   165                           	opt stack 0
   166  000016                     setLEDR@v:
   167                           	opt stack 0
   168  000016                     setLEDY@v:
   169                           	opt stack 0
   170  000016                     setLEDG@v:
   171                           	opt stack 0
   172  000016                     ___awdiv@dividend:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x15
   176  000016                     	ds	1
   177  000017                     setLEDs@y:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x16
   181  000017                     	ds	1
   182  000018                     setLEDs@g:
   183                           	opt stack 0
   184  000018                     ___awdiv@divisor:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x17
   188  000018                     	ds	1
   189  000019                     setLEDs@r:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x18
   193  000019                     	ds	1
   194  00001A                     ___awdiv@counter:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x19
   198  00001A                     	ds	1
   199  00001B                     ___awdiv@sign:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x1A
   203  00001B                     	ds	1
   204  00001C                     ___awdiv@quotient:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x1B
   208  00001C                     	ds	2
   209  00001E                     setMotors@left:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x1D
   213  00001E                     	ds	2
   214  000020                     setMotors@right:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x1F
   218  000020                     	ds	2
   219  000022                     ??_setMotors:
   220                           
   221                           ; 1 bytes @ 0x21
   222  000022                     	ds	2
   223  000024                     tblptru	equ	0xFF8
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           ; 1 bytes @ 0x23
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 26 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         0       0       0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called:    5
   253 ;; This function calls:
   254 ;;		_initCNY
   255 ;;		_initInterrupts
   256 ;;		_initMotors
   257 ;;		_initTimer
   258 ;;		_initUI
   259 ;;		_loop
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text0
   266  000BDC                     __ptext0:
   267                           	opt stack 0
   268  000BDC                     _main:
   269                           	opt stack 26
   270                           
   271                           ;main.c: 27: initInterrupts();
   272                           
   273                           ;incstack = 0
   274  000BDC  EC29  F006         	call	_initInterrupts	;wreg free
   275                           
   276                           ;main.c: 28: initTimer();
   277  000BE0  EC24  F006         	call	_initTimer	;wreg free
   278                           
   279                           ;main.c: 29: initUI();
   280  000BE4  EC06  F006         	call	_initUI	;wreg free
   281                           
   282                           ;main.c: 30: initMotors();
   283  000BE8  EC7D  F005         	call	_initMotors	;wreg free
   284                           
   285                           ;main.c: 31: initCNY();
   286  000BEC  EC98  F005         	call	_initCNY	;wreg free
   287  000BF0  ECB1  F005         	call	_loop	;wreg free
   288  000BF4  D7FD               	goto	l107
   289  000BF6                     __end_of_main:
   290                           	opt stack 0
   291                           tblptru	equ	0xFF8
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295 ;; *************** function _loop *****************
   296 ;; Defined at:
   297 ;;		line 12 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   311 ;;      Params:         0       0       0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    4
   318 ;; This function calls:
   319 ;;		_setLEDs
   320 ;;		_setMotors
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text1
   327  000B62                     __ptext1:
   328                           	opt stack 0
   329  000B62                     _loop:
   330                           	opt stack 26
   331                           
   332                           ;main.c: 13: static char status = MENU;
   333                           ;main.c: 14: switch(status){
   334                           
   335                           ;incstack = 0
   336  000B62  D012               	goto	l96
   337  000B64                     
   338                           ;main.c: 16: setMotors(0, 0);
   339  000B64  0E00               	movlw	0
   340  000B66  6E1F               	movwf	setMotors@left+1,c
   341  000B68  0E00               	movlw	0
   342  000B6A  6E1E               	movwf	setMotors@left,c
   343  000B6C  0E00               	movlw	0
   344  000B6E  6E21               	movwf	setMotors@right+1,c
   345  000B70  0E00               	movlw	0
   346  000B72  6E20               	movwf	setMotors@right,c
   347  000B74  EC04  F004         	call	_setMotors	;wreg free
   348                           
   349                           ;main.c: 17: setLEDs(1, 0, 0);
   350  000B78  0E00               	movlw	0
   351  000B7A  6E17               	movwf	setLEDs@y,c
   352  000B7C  0E00               	movlw	0
   353  000B7E  6E18               	movwf	setLEDs@g,c
   354  000B80  0E01               	movlw	1
   355  000B82  ECFB  F005         	call	_setLEDs
   356                           
   357                           ;main.c: 19: }
   358                           
   359                           ;main.c: 18: break;
   360  000B86  0012               	return	
   361  000B88                     l96:
   362  000B88  5034               	movf	loop@status,w,c
   363                           
   364                           ; Switch size 1, requested type "space"
   365                           ; Number of cases is 1, Range of values is 0 to 0
   366                           ; switch strategies available:
   367                           ; Name         Instructions Cycles
   368                           ; simple_byte            4     3 (average)
   369                           ;	Chosen strategy is simple_byte
   370  000B8A  0A00               	xorlw	0	; case 0
   371  000B8C  A4D8               	btfss	status,2,c
   372  000B8E  0012               	return	
   373  000B90  D7E9               	goto	l97
   374  000B92                     __end_of_loop:
   375                           	opt stack 0
   376                           tblptru	equ	0xFF8
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           status	equ	0xFD8
   380                           
   381 ;; *************** function _setMotors *****************
   382 ;; Defined at:
   383 ;;		line 34 in file "motors.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;  left            2   29[COMRAM] int 
   386 ;;  right           2   31[COMRAM] int 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         4       0       0       0       0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0
   400 ;;      Temps:          2       0       0       0       0       0       0       0       0
   401 ;;      Totals:         6       0       0       0       0       0       0       0       0
   402 ;;Total ram usage:        6 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; Hardware stack levels required when called:    3
   405 ;; This function calls:
   406 ;;		___awdiv
   407 ;; This function is called by:
   408 ;;		_loop
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413  000808                     __ptext2:
   414                           	opt stack 0
   415  000808                     _setMotors:
   416                           	opt stack 26
   417                           
   418                           ;motors.c: 35: LATCbits.LATC6 = left <= 0;
   419                           
   420                           ;incstack = 0
   421  000808  BE1F               	btfsc	setMotors@left+1,7,c
   422  00080A  D005               	goto	u351
   423  00080C  501F               	movf	setMotors@left+1,w,c
   424  00080E  E106               	bnz	u350
   425  000810  041E               	decf	setMotors@left,w,c
   426  000812  B0D8               	btfsc	status,0,c
   427  000814  D003               	goto	u350
   428  000816                     u351:
   429  000816  6A22               	clrf	??_setMotors& (0+255),c
   430  000818  2A22               	incf	??_setMotors& (0+255),f,c
   431  00081A  D001               	goto	u368
   432  00081C                     u350:
   433  00081C  6A22               	clrf	??_setMotors& (0+255),c
   434  00081E                     u368:
   435  00081E  3A22               	swapf	??_setMotors,f,c
   436  000820  4622               	rlncf	??_setMotors,f,c
   437  000822  4622               	rlncf	??_setMotors,f,c
   438  000824  508B               	movf	3979,w,c	;volatile
   439  000826  1822               	xorwf	??_setMotors,w,c
   440  000828  0BBF               	andlw	-65
   441  00082A  1822               	xorwf	??_setMotors,w,c
   442  00082C  6E8B               	movwf	3979,c	;volatile
   443                           
   444                           ;motors.c: 36: LATCbits.LATC0 = right <= 0;
   445  00082E  BE21               	btfsc	setMotors@right+1,7,c
   446  000830  D005               	goto	u371
   447  000832  5021               	movf	setMotors@right+1,w,c
   448  000834  E106               	bnz	u370
   449  000836  0420               	decf	setMotors@right,w,c
   450  000838  B0D8               	btfsc	status,0,c
   451  00083A  D003               	goto	u370
   452  00083C                     u371:
   453  00083C  6A22               	clrf	??_setMotors& (0+255),c
   454  00083E  2A22               	incf	??_setMotors& (0+255),f,c
   455  000840  D001               	goto	u388
   456  000842                     u370:
   457  000842  6A22               	clrf	??_setMotors& (0+255),c
   458  000844                     u388:
   459  000844  508B               	movf	3979,w,c	;volatile
   460  000846  1822               	xorwf	??_setMotors,w,c
   461  000848  0BFE               	andlw	-2
   462  00084A  1822               	xorwf	??_setMotors,w,c
   463  00084C  6E8B               	movwf	3979,c	;volatile
   464                           
   465                           ;motors.c: 37: if(left < 0) left = 1000 - left;
   466  00084E  AE1F               	btfss	setMotors@left+1,7,c
   467  000850  D00E               	goto	l50
   468  000852  C01E  F022         	movff	setMotors@left,??_setMotors
   469  000856  C01F  F023         	movff	setMotors@left+1,??_setMotors+1
   470  00085A  1E22               	comf	??_setMotors,f,c
   471  00085C  1E23               	comf	??_setMotors+1,f,c
   472  00085E  4A22               	infsnz	??_setMotors,f,c
   473  000860  2A23               	incf	??_setMotors+1,f,c
   474  000862  0EE8               	movlw	232
   475  000864  2422               	addwf	??_setMotors,w,c
   476  000866  6E1E               	movwf	setMotors@left,c
   477  000868  0E03               	movlw	3
   478  00086A  2023               	addwfc	??_setMotors+1,w,c
   479  00086C  6E1F               	movwf	setMotors@left+1,c
   480  00086E                     l50:
   481                           
   482                           ;motors.c: 38: if(right < 0) right = 1000 - right;
   483  00086E  AE21               	btfss	setMotors@right+1,7,c
   484  000870  D00E               	goto	l51
   485  000872  C020  F022         	movff	setMotors@right,??_setMotors
   486  000876  C021  F023         	movff	setMotors@right+1,??_setMotors+1
   487  00087A  1E22               	comf	??_setMotors,f,c
   488  00087C  1E23               	comf	??_setMotors+1,f,c
   489  00087E  4A22               	infsnz	??_setMotors,f,c
   490  000880  2A23               	incf	??_setMotors+1,f,c
   491  000882  0EE8               	movlw	232
   492  000884  2422               	addwf	??_setMotors,w,c
   493  000886  6E20               	movwf	setMotors@right,c
   494  000888  0E03               	movlw	3
   495  00088A  2023               	addwfc	??_setMotors+1,w,c
   496  00088C  6E21               	movwf	setMotors@right+1,c
   497  00088E                     l51:
   498                           
   499                           ;motors.c: 39: if(left > 1000) left = 1000;
   500  00088E  BE1F               	btfsc	setMotors@left+1,7,c
   501  000890  D00A               	goto	l52
   502  000892  0EE9               	movlw	233
   503  000894  5C1E               	subwf	setMotors@left,w,c
   504  000896  0E03               	movlw	3
   505  000898  581F               	subwfb	setMotors@left+1,w,c
   506  00089A  A0D8               	btfss	status,0,c
   507  00089C  D004               	goto	l52
   508  00089E  0E03               	movlw	3
   509  0008A0  6E1F               	movwf	setMotors@left+1,c
   510  0008A2  0EE8               	movlw	232
   511  0008A4  6E1E               	movwf	setMotors@left,c
   512  0008A6                     l52:
   513                           
   514                           ;motors.c: 40: if(right > 1000) right = 1000;
   515  0008A6  BE21               	btfsc	setMotors@right+1,7,c
   516  0008A8  D00A               	goto	l53
   517  0008AA  0EE9               	movlw	233
   518  0008AC  5C20               	subwf	setMotors@right,w,c
   519  0008AE  0E03               	movlw	3
   520  0008B0  5821               	subwfb	setMotors@right+1,w,c
   521  0008B2  A0D8               	btfss	status,0,c
   522  0008B4  D004               	goto	l53
   523  0008B6  0E03               	movlw	3
   524  0008B8  6E21               	movwf	setMotors@right+1,c
   525  0008BA  0EE8               	movlw	232
   526  0008BC  6E20               	movwf	setMotors@right,c
   527  0008BE                     l53:
   528                           
   529                           ;motors.c: 41: left = left * 1024 / 1000;
   530  0008BE  C01E  F022         	movff	setMotors@left,??_setMotors
   531  0008C2  C01F  F023         	movff	setMotors@left+1,??_setMotors+1
   532  0008C6  0E0A               	movlw	10
   533  0008C8                     u435:
   534  0008C8  90D8               	bcf	status,0,c
   535  0008CA  3622               	rlcf	??_setMotors,f,c
   536  0008CC  3623               	rlcf	??_setMotors+1,f,c
   537  0008CE  2EE8               	decfsz	wreg,f,c
   538  0008D0  D7FB               	goto	u435
   539  0008D2  C022  F016         	movff	??_setMotors,___awdiv@dividend
   540  0008D6  C023  F017         	movff	??_setMotors+1,___awdiv@dividend+1
   541  0008DA  0E03               	movlw	3
   542  0008DC  6E19               	movwf	___awdiv@divisor+1,c
   543  0008DE  0EE8               	movlw	232
   544  0008E0  6E18               	movwf	___awdiv@divisor,c
   545  0008E2  EC0B  F005         	call	___awdiv	;wreg free
   546  0008E6  C016  F01E         	movff	?___awdiv,setMotors@left
   547  0008EA  C017  F01F         	movff	?___awdiv+1,setMotors@left+1
   548                           
   549                           ;motors.c: 42: right = right * 1024 / 1000;
   550  0008EE  C020  F022         	movff	setMotors@right,??_setMotors
   551  0008F2  C021  F023         	movff	setMotors@right+1,??_setMotors+1
   552  0008F6  0E0A               	movlw	10
   553  0008F8                     u445:
   554  0008F8  90D8               	bcf	status,0,c
   555  0008FA  3622               	rlcf	??_setMotors,f,c
   556  0008FC  3623               	rlcf	??_setMotors+1,f,c
   557  0008FE  2EE8               	decfsz	wreg,f,c
   558  000900  D7FB               	goto	u445
   559  000902  C022  F016         	movff	??_setMotors,___awdiv@dividend
   560  000906  C023  F017         	movff	??_setMotors+1,___awdiv@dividend+1
   561  00090A  0E03               	movlw	3
   562  00090C  6E19               	movwf	___awdiv@divisor+1,c
   563  00090E  0EE8               	movlw	232
   564  000910  6E18               	movwf	___awdiv@divisor,c
   565  000912  EC0B  F005         	call	___awdiv	;wreg free
   566  000916  C016  F020         	movff	?___awdiv,setMotors@right
   567  00091A  C017  F021         	movff	?___awdiv+1,setMotors@right+1
   568                           
   569                           ;motors.c: 43: CCP2CONbits.DC2B = left & 3;
   570  00091E  C01E  F022         	movff	setMotors@left,??_setMotors
   571  000922  0E03               	movlw	3
   572  000924  1622               	andwf	??_setMotors,f,c
   573  000926  3A22               	swapf	??_setMotors,f,c
   574  000928  50BA               	movf	4026,w,c	;volatile
   575  00092A  1822               	xorwf	??_setMotors,w,c
   576  00092C  0BCF               	andlw	-49
   577  00092E  1822               	xorwf	??_setMotors,w,c
   578  000930  6EBA               	movwf	4026,c	;volatile
   579                           
   580                           ;motors.c: 44: CCP1CONbits.DC1B = right & 3;
   581  000932  C020  F022         	movff	setMotors@right,??_setMotors
   582  000936  0E03               	movlw	3
   583  000938  1622               	andwf	??_setMotors,f,c
   584  00093A  3A22               	swapf	??_setMotors,f,c
   585  00093C  50BD               	movf	4029,w,c	;volatile
   586  00093E  1822               	xorwf	??_setMotors,w,c
   587  000940  0BCF               	andlw	-49
   588  000942  1822               	xorwf	??_setMotors,w,c
   589  000944  6EBD               	movwf	4029,c	;volatile
   590                           
   591                           ;motors.c: 45: CCPR2L = left >> 2;
   592  000946  C01E  F022         	movff	setMotors@left,??_setMotors
   593  00094A  C01F  F023         	movff	setMotors@left+1,??_setMotors+1
   594  00094E  3423               	rlcf	??_setMotors+1,w,c
   595  000950  3223               	rrcf	??_setMotors+1,f,c
   596  000952  3222               	rrcf	??_setMotors,f,c
   597  000954  3423               	rlcf	??_setMotors+1,w,c
   598  000956  3223               	rrcf	??_setMotors+1,f,c
   599  000958  3222               	rrcf	??_setMotors,f,c
   600  00095A  5022               	movf	??_setMotors,w,c
   601  00095C  6EBB               	movwf	4027,c	;volatile
   602                           
   603                           ;motors.c: 46: CCPR1L = right >> 2;
   604  00095E  C020  F022         	movff	setMotors@right,??_setMotors
   605  000962  C021  F023         	movff	setMotors@right+1,??_setMotors+1
   606  000966  3423               	rlcf	??_setMotors+1,w,c
   607  000968  3223               	rrcf	??_setMotors+1,f,c
   608  00096A  3222               	rrcf	??_setMotors,f,c
   609  00096C  3423               	rlcf	??_setMotors+1,w,c
   610  00096E  3223               	rrcf	??_setMotors+1,f,c
   611  000970  3222               	rrcf	??_setMotors,f,c
   612  000972  5022               	movf	??_setMotors,w,c
   613  000974  6EBE               	movwf	4030,c	;volatile
   614  000976  0012               	return		;funcret
   615  000978                     __end_of_setMotors:
   616                           	opt stack 0
   617                           tblptru	equ	0xFF8
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           status	equ	0xFD8
   621                           
   622 ;; *************** function ___awdiv *****************
   623 ;; Defined at:
   624 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  dividend        2   21[COMRAM] int 
   627 ;;  divisor         2   23[COMRAM] int 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  quotient        2   27[COMRAM] int 
   630 ;;  sign            1   26[COMRAM] unsigned char 
   631 ;;  counter         1   25[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  2   21[COMRAM] int 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         4       0       0       0       0       0       0       0       0
   642 ;;      Locals:         4       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         8       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        8 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_setMotors
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text3
   656  000A16                     __ptext3:
   657                           	opt stack 0
   658  000A16                     ___awdiv:
   659                           	opt stack 26
   660                           
   661                           ;incstack = 0
   662  000A16  0E00               	movlw	0
   663  000A18  6E1B               	movwf	___awdiv@sign,c
   664  000A1A  AE19               	btfss	___awdiv@divisor+1,7,c
   665  000A1C  D006               	goto	l330
   666  000A1E  6C18               	negf	___awdiv@divisor,c
   667  000A20  1E19               	comf	___awdiv@divisor+1,f,c
   668  000A22  B0D8               	btfsc	status,0,c
   669  000A24  2A19               	incf	___awdiv@divisor+1,f,c
   670  000A26  0E01               	movlw	1
   671  000A28  6E1B               	movwf	___awdiv@sign,c
   672  000A2A                     l330:
   673  000A2A  AE17               	btfss	___awdiv@dividend+1,7,c
   674  000A2C  D006               	goto	l331
   675  000A2E  6C16               	negf	___awdiv@dividend,c
   676  000A30  1E17               	comf	___awdiv@dividend+1,f,c
   677  000A32  B0D8               	btfsc	status,0,c
   678  000A34  2A17               	incf	___awdiv@dividend+1,f,c
   679  000A36  0E01               	movlw	1
   680  000A38  1A1B               	xorwf	___awdiv@sign,f,c
   681  000A3A                     l331:
   682  000A3A  0E00               	movlw	0
   683  000A3C  6E1D               	movwf	___awdiv@quotient+1,c
   684  000A3E  0E00               	movlw	0
   685  000A40  6E1C               	movwf	___awdiv@quotient,c
   686  000A42  5018               	movf	___awdiv@divisor,w,c
   687  000A44  1019               	iorwf	___awdiv@divisor+1,w,c
   688  000A46  B4D8               	btfsc	status,2,c
   689  000A48  D01C               	goto	l338
   690  000A4A  0E01               	movlw	1
   691  000A4C  6E1A               	movwf	___awdiv@counter,c
   692  000A4E  D004               	goto	l333
   693  000A50  90D8               	bcf	status,0,c
   694  000A52  3618               	rlcf	___awdiv@divisor,f,c
   695  000A54  3619               	rlcf	___awdiv@divisor+1,f,c
   696  000A56  2A1A               	incf	___awdiv@counter,f,c
   697  000A58                     l333:
   698  000A58  AE19               	btfss	___awdiv@divisor+1,7,c
   699  000A5A  D7FA               	goto	l334
   700  000A5C                     u320:
   701  000A5C  90D8               	bcf	status,0,c
   702  000A5E  361C               	rlcf	___awdiv@quotient,f,c
   703  000A60  361D               	rlcf	___awdiv@quotient+1,f,c
   704  000A62  5018               	movf	___awdiv@divisor,w,c
   705  000A64  5C16               	subwf	___awdiv@dividend,w,c
   706  000A66  5019               	movf	___awdiv@divisor+1,w,c
   707  000A68  5817               	subwfb	___awdiv@dividend+1,w,c
   708  000A6A  A0D8               	btfss	status,0,c
   709  000A6C  D005               	goto	l337
   710  000A6E  5018               	movf	___awdiv@divisor,w,c
   711  000A70  5E16               	subwf	___awdiv@dividend,f,c
   712  000A72  5019               	movf	___awdiv@divisor+1,w,c
   713  000A74  5A17               	subwfb	___awdiv@dividend+1,f,c
   714  000A76  801C               	bsf	___awdiv@quotient,0,c
   715  000A78                     l337:
   716  000A78  90D8               	bcf	status,0,c
   717  000A7A  3219               	rrcf	___awdiv@divisor+1,f,c
   718  000A7C  3218               	rrcf	___awdiv@divisor,f,c
   719  000A7E  2E1A               	decfsz	___awdiv@counter,f,c
   720  000A80  D7ED               	goto	u320
   721  000A82                     l338:
   722  000A82  501B               	movf	___awdiv@sign,w,c
   723  000A84  B4D8               	btfsc	status,2,c
   724  000A86  D004               	goto	l339
   725  000A88  6C1C               	negf	___awdiv@quotient,c
   726  000A8A  1E1D               	comf	___awdiv@quotient+1,f,c
   727  000A8C  B0D8               	btfsc	status,0,c
   728  000A8E  2A1D               	incf	___awdiv@quotient+1,f,c
   729  000A90                     l339:
   730  000A90  C01C  F016         	movff	___awdiv@quotient,?___awdiv
   731  000A94  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
   732  000A98  0012               	return	
   733  000A9A                     __end_of___awdiv:
   734                           	opt stack 0
   735                           tblptru	equ	0xFF8
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _setLEDs *****************
   741 ;; Defined at:
   742 ;;		line 32 in file "ui.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  r               1    wreg     unsigned char 
   745 ;;  y               1   22[COMRAM] unsigned char 
   746 ;;  g               1   23[COMRAM] unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  r               1   24[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         2       0       0       0       0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0
   761 ;;      Totals:         3       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        3 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		_setLEDG
   767 ;;		_setLEDR
   768 ;;		_setLEDY
   769 ;; This function is called by:
   770 ;;		_loop
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text4
   775  000BF6                     __ptext4:
   776                           	opt stack 0
   777  000BF6                     _setLEDs:
   778                           	opt stack 26
   779                           
   780                           ;incstack = 0
   781                           ;setLEDs@r stored from wreg
   782  000BF6  6E19               	movwf	setLEDs@r,c
   783                           
   784                           ;ui.c: 33: setLEDR(r);
   785  000BF8  5019               	movf	setLEDs@r,w,c
   786  000BFA  EC16  F006         	call	_setLEDR
   787                           
   788                           ;ui.c: 34: setLEDY(y);
   789  000BFE  5017               	movf	setLEDs@y,w,c
   790  000C00  EC0F  F006         	call	_setLEDY
   791                           
   792                           ;ui.c: 35: setLEDG(g);
   793  000C04  5018               	movf	setLEDs@g,w,c
   794  000C06  EC1D  F006         	call	_setLEDG
   795  000C0A  0012               	return		;funcret
   796  000C0C                     __end_of_setLEDs:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _setLEDY *****************
   804 ;; Defined at:
   805 ;;		line 54 in file "ui.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  v               1    wreg     unsigned char 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  v               1   21[COMRAM] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   819 ;;      Params:         0       0       0       0       0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0
   822 ;;      Totals:         1       0       0       0       0       0       0       0       0
   823 ;;Total ram usage:        1 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    2
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_setLEDs
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text5
   834  000C1E                     __ptext5:
   835                           	opt stack 0
   836  000C1E                     _setLEDY:
   837                           	opt stack 26
   838                           
   839                           ;incstack = 0
   840                           ;setLEDY@v stored from wreg
   841  000C1E  6E16               	movwf	setLEDY@v,c
   842                           
   843                           ;ui.c: 55: LATBbits.LB2 = v;
   844  000C20  B016               	btfsc	setLEDY@v,0,c
   845  000C22  D002               	bra	u25
   846  000C24  948A               	bcf	3978,2,c	;volatile
   847  000C26  D001               	bra	u26
   848  000C28                     u25:
   849  000C28  848A               	bsf	3978,2,c	;volatile
   850  000C2A                     u26:
   851  000C2A  0012               	return		;funcret
   852  000C2C                     __end_of_setLEDY:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _setLEDR *****************
   860 ;; Defined at:
   861 ;;		line 50 in file "ui.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  v               1    wreg     unsigned char 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  v               1   21[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         0       0       0       0       0       0       0       0       0
   876 ;;      Locals:         1       0       0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0
   878 ;;      Totals:         1       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        1 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    2
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_setLEDs
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text6
   890  000C2C                     __ptext6:
   891                           	opt stack 0
   892  000C2C                     _setLEDR:
   893                           	opt stack 26
   894                           
   895                           ;incstack = 0
   896                           ;setLEDR@v stored from wreg
   897  000C2C  6E16               	movwf	setLEDR@v,c
   898                           
   899                           ;ui.c: 51: LATBbits.LB1 = v;
   900  000C2E  B016               	btfsc	setLEDR@v,0,c
   901  000C30  D002               	bra	u15
   902  000C32  928A               	bcf	3978,1,c	;volatile
   903  000C34  D001               	bra	u16
   904  000C36                     u15:
   905  000C36  828A               	bsf	3978,1,c	;volatile
   906  000C38                     u16:
   907  000C38  0012               	return		;funcret
   908  000C3A                     __end_of_setLEDR:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           status	equ	0xFD8
   914                           
   915 ;; *************** function _setLEDG *****************
   916 ;; Defined at:
   917 ;;		line 58 in file "ui.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  v               1    wreg     unsigned char 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  v               1   21[COMRAM] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   931 ;;      Params:         0       0       0       0       0       0       0       0       0
   932 ;;      Locals:         1       0       0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0
   934 ;;      Totals:         1       0       0       0       0       0       0       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    2
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_setLEDs
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text7
   946  000C3A                     __ptext7:
   947                           	opt stack 0
   948  000C3A                     _setLEDG:
   949                           	opt stack 26
   950                           
   951                           ;incstack = 0
   952                           ;setLEDG@v stored from wreg
   953  000C3A  6E16               	movwf	setLEDG@v,c
   954                           
   955                           ;ui.c: 59: LATBbits.LB3 = v;
   956  000C3C  B016               	btfsc	setLEDG@v,0,c
   957  000C3E  D002               	bra	u35
   958  000C40  968A               	bcf	3978,3,c	;volatile
   959  000C42  D001               	bra	u36
   960  000C44                     u35:
   961  000C44  868A               	bsf	3978,3,c	;volatile
   962  000C46                     u36:
   963  000C46  0012               	return		;funcret
   964  000C48                     __end_of_setLEDG:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function _initUI *****************
   972 ;; Defined at:
   973 ;;		line 18 in file "ui.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		None
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         0       0       0       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text8
  1002  000C0C                     __ptext8:
  1003                           	opt stack 0
  1004  000C0C                     _initUI:
  1005                           	opt stack 28
  1006                           
  1007                           ;ui.c: 19: TRISBbits.RB1 = 0;
  1008                           
  1009                           ;incstack = 0
  1010  000C0C  9293               	bcf	3987,1,c	;volatile
  1011                           
  1012                           ;ui.c: 20: LATBbits.LB1 = 0;
  1013  000C0E  928A               	bcf	3978,1,c	;volatile
  1014                           
  1015                           ;ui.c: 22: TRISBbits.RB2 = 0;
  1016  000C10  9493               	bcf	3987,2,c	;volatile
  1017                           
  1018                           ;ui.c: 23: LATBbits.LB2 = 0;
  1019  000C12  948A               	bcf	3978,2,c	;volatile
  1020                           
  1021                           ;ui.c: 25: TRISBbits.RB3 = 0;
  1022  000C14  9693               	bcf	3987,3,c	;volatile
  1023                           
  1024                           ;ui.c: 26: LATBbits.LB3 = 0;
  1025  000C16  968A               	bcf	3978,3,c	;volatile
  1026                           
  1027                           ;ui.c: 28: TRISBbits.RB0 = 1;
  1028  000C18  8093               	bsf	3987,0,c	;volatile
  1029                           
  1030                           ;ui.c: 29: TRISBbits.RB5 = 1;
  1031  000C1A  8A93               	bsf	3987,5,c	;volatile
  1032  000C1C  0012               	return		;funcret
  1033  000C1E                     __end_of_initUI:
  1034                           	opt stack 0
  1035                           tblptru	equ	0xFF8
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           status	equ	0xFD8
  1039                           
  1040 ;; *************** function _initTimer *****************
  1041 ;; Defined at:
  1042 ;;		line 21 in file "timer.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1056 ;;      Params:         0       0       0       0       0       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1060 ;;Total ram usage:        0 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    2
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text9
  1071  000C48                     __ptext9:
  1072                           	opt stack 0
  1073  000C48                     _initTimer:
  1074                           	opt stack 28
  1075                           
  1076                           ;timer.c: 22: INTCONbits.TMR0IF = 0;
  1077                           
  1078                           ;incstack = 0
  1079  000C48  94F2               	bcf	intcon,2,c	;volatile
  1080                           
  1081                           ;timer.c: 23: INTCONbits.TMR0IE = 1;
  1082  000C4A  8AF2               	bsf	intcon,5,c	;volatile
  1083                           
  1084                           ;timer.c: 24: T0CON = 0xC4;
  1085  000C4C  0EC4               	movlw	196
  1086  000C4E  6ED5               	movwf	4053,c	;volatile
  1087  000C50  0012               	return		;funcret
  1088  000C52                     __end_of_initTimer:
  1089                           	opt stack 0
  1090                           tblptru	equ	0xFF8
  1091                           intcon	equ	0xFF2
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _initMotors *****************
  1097 ;; Defined at:
  1098 ;;		line 14 in file "motors.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    2
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text10
  1127  000AFA                     __ptext10:
  1128                           	opt stack 0
  1129  000AFA                     _initMotors:
  1130                           	opt stack 28
  1131                           
  1132                           ;motors.c: 15: TRISCbits.TRISC6 = 0;
  1133                           
  1134                           ;incstack = 0
  1135  000AFA  9C94               	bcf	3988,6,c	;volatile
  1136                           
  1137                           ;motors.c: 16: TRISCbits.TRISC0 = 0;
  1138  000AFC  9094               	bcf	3988,0,c	;volatile
  1139                           
  1140                           ;motors.c: 18: LATCbits.LATC0 = 0;
  1141  000AFE  908B               	bcf	3979,0,c	;volatile
  1142                           
  1143                           ;motors.c: 19: LATCbits.LATC6 = 0;
  1144  000B00  9C8B               	bcf	3979,6,c	;volatile
  1145                           
  1146                           ;motors.c: 21: TRISCbits.TRISC2 = 0;
  1147  000B02  9494               	bcf	3988,2,c	;volatile
  1148                           
  1149                           ;motors.c: 22: TRISCbits.TRISC1 = 0;
  1150  000B04  9294               	bcf	3988,1,c	;volatile
  1151                           
  1152                           ;motors.c: 24: PR2 = 249;
  1153  000B06  0EF9               	movlw	249
  1154  000B08  6ECB               	movwf	4043,c	;volatile
  1155                           
  1156                           ;motors.c: 25: CCPR1L = 0;
  1157  000B0A  0E00               	movlw	0
  1158  000B0C  6EBE               	movwf	4030,c	;volatile
  1159                           
  1160                           ;motors.c: 26: CCPR2L = 0;
  1161  000B0E  0E00               	movlw	0
  1162  000B10  6EBB               	movwf	4027,c	;volatile
  1163                           
  1164                           ;motors.c: 27: CCP1CONbits.DC1B = 0;
  1165  000B12  0ECF               	movlw	-49
  1166  000B14  16BD               	andwf	4029,f,c	;volatile
  1167                           
  1168                           ;motors.c: 28: CCP2CONbits.DC2B = 0;
  1169  000B16  0ECF               	movlw	-49
  1170  000B18  16BA               	andwf	4026,f,c	;volatile
  1171                           
  1172                           ;motors.c: 29: T2CON = 0x05;
  1173  000B1A  0E05               	movlw	5
  1174  000B1C  6ECA               	movwf	4042,c	;volatile
  1175                           
  1176                           ;motors.c: 30: CCP1CONbits.CCP1M = 0xF;
  1177  000B1E  80BD               	bsf	4029,0,c	;volatile
  1178  000B20  82BD               	bsf	4029,1,c	;volatile
  1179  000B22  84BD               	bsf	4029,2,c	;volatile
  1180  000B24  86BD               	bsf	4029,3,c	;volatile
  1181                           
  1182                           ;motors.c: 31: CCP2CONbits.CCP2M = 0xF;
  1183  000B26  80BA               	bsf	4026,0,c	;volatile
  1184  000B28  82BA               	bsf	4026,1,c	;volatile
  1185  000B2A  84BA               	bsf	4026,2,c	;volatile
  1186  000B2C  86BA               	bsf	4026,3,c	;volatile
  1187  000B2E  0012               	return		;funcret
  1188  000B30                     __end_of_initMotors:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           intcon	equ	0xFF2
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           status	equ	0xFD8
  1195                           
  1196 ;; *************** function _initInterrupts *****************
  1197 ;; Defined at:
  1198 ;;		line 22 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		None
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text11
  1227  000C52                     __ptext11:
  1228                           	opt stack 0
  1229  000C52                     _initInterrupts:
  1230                           	opt stack 28
  1231                           
  1232                           ;main.c: 23: INTCONbits.PEIE = 1;
  1233                           
  1234                           ;incstack = 0
  1235  000C52  8CF2               	bsf	intcon,6,c	;volatile
  1236                           
  1237                           ;main.c: 24: INTCONbits.GIE = 1;
  1238  000C54  8EF2               	bsf	intcon,7,c	;volatile
  1239  000C56  0012               	return		;funcret
  1240  000C58                     __end_of_initInterrupts:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           intcon	equ	0xFF2
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           status	equ	0xFD8
  1247                           
  1248 ;; *************** function _initCNY *****************
  1249 ;; Defined at:
  1250 ;;		line 8 in file "CNY.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1266 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1267 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1268 ;;Total ram usage:        1 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    2
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text12
  1279  000B30                     __ptext12:
  1280                           	opt stack 0
  1281  000B30                     _initCNY:
  1282                           	opt stack 28
  1283                           
  1284                           ;CNY.c: 9: ADCON1 = 0x0A;
  1285                           
  1286                           ;incstack = 0
  1287  000B30  0E0A               	movlw	10
  1288  000B32  6EC1               	movwf	4033,c	;volatile
  1289                           
  1290                           ;CNY.c: 11: PIR1bits.ADIF = 0;
  1291  000B34  9C9E               	bcf	3998,6,c	;volatile
  1292                           
  1293                           ;CNY.c: 12: PIE1bits.ADIE = 1;
  1294  000B36  8C9D               	bsf	3997,6,c	;volatile
  1295                           
  1296                           ;CNY.c: 13: ADCON0bits.ADON = 1;
  1297  000B38  80C2               	bsf	4034,0,c	;volatile
  1298                           
  1299                           ;CNY.c: 14: ADCON0bits.CHS = channels[actualChannel];
  1300  000B3A  5035               	movf	_actualChannel,w,c
  1301  000B3C  0D01               	mullw	1
  1302  000B3E  0E01               	movlw	low _channels
  1303  000B40  24F3               	addwf	prodl,w,c
  1304  000B42  6EF6               	movwf	tblptrl,c
  1305  000B44  0E08               	movlw	high _channels
  1306  000B46  20F4               	addwfc	prodh,w,c
  1307  000B48  6EF7               	movwf	tblptrh,c
  1308  000B4A                     	if	0	;There are less than 3 active tblptr bytes
  1309  000B4A                     	endif
  1310  000B4A  0008               	tblrd		*
  1311  000B4C  CFF5 F016          	movff	tablat,??_initCNY
  1312  000B50  4616               	rlncf	??_initCNY,f,c
  1313  000B52  4616               	rlncf	??_initCNY,f,c
  1314  000B54  50C2               	movf	4034,w,c	;volatile
  1315  000B56  1816               	xorwf	??_initCNY,w,c
  1316  000B58  0BC3               	andlw	-61
  1317  000B5A  1816               	xorwf	??_initCNY,w,c
  1318  000B5C  6EC2               	movwf	4034,c	;volatile
  1319                           
  1320                           ;CNY.c: 15: ADCON0bits.GO = 1;
  1321  000B5E  82C2               	bsf	4034,1,c	;volatile
  1322  000B60  0012               	return		;funcret
  1323  000B62                     __end_of_initCNY:
  1324                           	opt stack 0
  1325                           tblptru	equ	0xFF8
  1326                           tblptrh	equ	0xFF7
  1327                           tblptrl	equ	0xFF6
  1328                           tablat	equ	0xFF5
  1329                           prodh	equ	0xFF4
  1330                           prodl	equ	0xFF3
  1331                           intcon	equ	0xFF2
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function _ISR *****************
  1337 ;; Defined at:
  1338 ;;		line 34 in file "main.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1354 ;;      Temps:         18       0       0       0       0       0       0       0       0
  1355 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1356 ;;Total ram usage:       18 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		_cnyInterrupt
  1361 ;;		_timerInterrupt
  1362 ;; This function is called by:
  1363 ;;		Interrupt level 2
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	intcode
  1368  000008                     __pintcode:
  1369                           	opt stack 0
  1370  000008                     _ISR:
  1371                           	opt stack 26
  1372                           
  1373                           ;incstack = 0
  1374  000008  8236               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1375  00000A  EDBC  F004         	call	int_func,f	;refresh shadow registers
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           prodh	equ	0xFF4
  1381                           prodl	equ	0xFF3
  1382                           intcon	equ	0xFF2
  1383                           postinc0	equ	0xFEE
  1384                           wreg	equ	0xFE8
  1385                           status	equ	0xFD8
  1386                           
  1387                           	psect	intcode_body
  1388  000978                     __pintcode_body:
  1389                           	opt stack 26
  1390  000978                     int_func:
  1391                           	opt stack 26
  1392  000978  0006               	pop		; remove dummy address from shadow register refresh
  1393  00097A  CFFA F004          	movff	pclath,??_ISR
  1394  00097E  CFFB F005          	movff	pclatu,??_ISR+1
  1395  000982  CFE9 F006          	movff	fsr0l,??_ISR+2
  1396  000986  CFEA F007          	movff	fsr0h,??_ISR+3
  1397  00098A  CFE1 F008          	movff	fsr1l,??_ISR+4
  1398  00098E  CFE2 F009          	movff	fsr1h,??_ISR+5
  1399  000992  CFD9 F00A          	movff	fsr2l,??_ISR+6
  1400  000996  CFDA F00B          	movff	fsr2h,??_ISR+7
  1401  00099A  CFF3 F00C          	movff	prodl,??_ISR+8
  1402  00099E  CFF4 F00D          	movff	prodh,??_ISR+9
  1403  0009A2  CFF6 F00E          	movff	tblptrl,??_ISR+10
  1404  0009A6  CFF7 F00F          	movff	tblptrh,??_ISR+11
  1405  0009AA  CFF8 F010          	movff	tblptru,??_ISR+12
  1406  0009AE  CFF5 F011          	movff	tablat,??_ISR+13
  1407  0009B2  C036  F012         	movff	btemp,??_ISR+14
  1408  0009B6  C037  F013         	movff	btemp+1,??_ISR+15
  1409  0009BA  C038  F014         	movff	btemp+2,??_ISR+16
  1410  0009BE  C039  F015         	movff	btemp+3,??_ISR+17
  1411                           
  1412                           ;main.c: 35: timerInterrupt();
  1413  0009C2  ECC9  F005         	call	_timerInterrupt	;wreg free
  1414                           
  1415                           ;main.c: 36: cnyInterrupt();
  1416  0009C6  EC4D  F005         	call	_cnyInterrupt	;wreg free
  1417  0009CA  C015  F039         	movff	??_ISR+17,btemp+3
  1418  0009CE  C014  F038         	movff	??_ISR+16,btemp+2
  1419  0009D2  C013  F037         	movff	??_ISR+15,btemp+1
  1420  0009D6  C012  F036         	movff	??_ISR+14,btemp
  1421  0009DA  C011  FFF5         	movff	??_ISR+13,tablat
  1422  0009DE  C010  FFF8         	movff	??_ISR+12,tblptru
  1423  0009E2  C00F  FFF7         	movff	??_ISR+11,tblptrh
  1424  0009E6  C00E  FFF6         	movff	??_ISR+10,tblptrl
  1425  0009EA  C00D  FFF4         	movff	??_ISR+9,prodh
  1426  0009EE  C00C  FFF3         	movff	??_ISR+8,prodl
  1427  0009F2  C00B  FFDA         	movff	??_ISR+7,fsr2h
  1428  0009F6  C00A  FFD9         	movff	??_ISR+6,fsr2l
  1429  0009FA  C009  FFE2         	movff	??_ISR+5,fsr1h
  1430  0009FE  C008  FFE1         	movff	??_ISR+4,fsr1l
  1431  000A02  C007  FFEA         	movff	??_ISR+3,fsr0h
  1432  000A06  C006  FFE9         	movff	??_ISR+2,fsr0l
  1433  000A0A  C005  FFFB         	movff	??_ISR+1,pclatu
  1434  000A0E  C004  FFFA         	movff	??_ISR,pclath
  1435  000A12  9236               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1436  000A14  0011               	retfie		f
  1437  000A16                     __end_of_ISR:
  1438                           	opt stack 0
  1439                           pclatu	equ	0xFFB
  1440                           pclath	equ	0xFFA
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           prodh	equ	0xFF4
  1446                           prodl	equ	0xFF3
  1447                           intcon	equ	0xFF2
  1448                           postinc0	equ	0xFEE
  1449                           fsr0h	equ	0xFEA
  1450                           fsr0l	equ	0xFE9
  1451                           wreg	equ	0xFE8
  1452                           fsr1h	equ	0xFE2
  1453                           fsr1l	equ	0xFE1
  1454                           fsr2h	equ	0xFDA
  1455                           fsr2l	equ	0xFD9
  1456                           status	equ	0xFD8
  1457                           
  1458 ;; *************** function _timerInterrupt *****************
  1459 ;; Defined at:
  1460 ;;		line 11 in file "timer.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_ISR
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text14
  1488  000B92                     __ptext14:
  1489                           	opt stack 0
  1490  000B92                     _timerInterrupt:
  1491                           	opt stack 26
  1492                           
  1493                           ;timer.c: 12: if(!INTCONbits.TMR0IF) return;
  1494                           
  1495                           ;incstack = 0
  1496  000B92  A4F2               	btfss	intcon,2,c	;volatile
  1497  000B94  0012               	return	
  1498                           
  1499                           ;timer.c: 13: fractionCounter += 680;
  1500  000B96  0EA8               	movlw	168
  1501  000B98  2632               	addwf	_fractionCounter,f,c
  1502  000B9A  0E02               	movlw	2
  1503  000B9C  2233               	addwfc	_fractionCounter+1,f,c
  1504                           
  1505                           ;timer.c: 14: if(1000 <= fractionCounter){
  1506  000B9E  0EE8               	movlw	232
  1507  000BA0  5C32               	subwf	_fractionCounter,w,c
  1508  000BA2  0E03               	movlw	3
  1509  000BA4  5833               	subwfb	_fractionCounter+1,w,c
  1510  000BA6  A0D8               	btfss	status,0,c
  1511  000BA8  D00A               	goto	i2l70
  1512                           
  1513                           ;timer.c: 15: fractionCounter -= 1000;
  1514  000BAA  0EE8               	movlw	232
  1515  000BAC  5E32               	subwf	_fractionCounter,f,c
  1516  000BAE  0E03               	movlw	3
  1517  000BB0  5A33               	subwfb	_fractionCounter+1,f,c
  1518                           
  1519                           ;timer.c: 16: millisCounter++;
  1520  000BB2  0E01               	movlw	1
  1521  000BB4  262E               	addwf	_millisCounter,f,c
  1522  000BB6  0E00               	movlw	0
  1523  000BB8  222F               	addwfc	_millisCounter+1,f,c
  1524  000BBA  2230               	addwfc	_millisCounter+2,f,c
  1525  000BBC  2231               	addwfc	_millisCounter+3,f,c
  1526  000BBE                     i2l70:
  1527                           
  1528                           ;timer.c: 17: }
  1529                           ;timer.c: 18: INTCONbits.TMR0IF = 0;
  1530  000BBE  94F2               	bcf	intcon,2,c	;volatile
  1531  000BC0  0012               	return		;funcret
  1532  000BC2                     __end_of_timerInterrupt:
  1533                           	opt stack 0
  1534                           pclatu	equ	0xFFB
  1535                           pclath	equ	0xFFA
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           prodh	equ	0xFF4
  1541                           prodl	equ	0xFF3
  1542                           intcon	equ	0xFF2
  1543                           postinc0	equ	0xFEE
  1544                           fsr0h	equ	0xFEA
  1545                           fsr0l	equ	0xFE9
  1546                           wreg	equ	0xFE8
  1547                           fsr1h	equ	0xFE2
  1548                           fsr1l	equ	0xFE1
  1549                           fsr2h	equ	0xFDA
  1550                           fsr2l	equ	0xFD9
  1551                           status	equ	0xFD8
  1552                           
  1553 ;; *************** function _cnyInterrupt *****************
  1554 ;; Defined at:
  1555 ;;		line 18 in file "CNY.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        3 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_ISR
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text15
  1583  000A9A                     __ptext15:
  1584                           	opt stack 0
  1585  000A9A                     _cnyInterrupt:
  1586                           	opt stack 26
  1587                           
  1588                           ;CNY.c: 19: PIR1bits.ADIF = 0;
  1589                           
  1590                           ;incstack = 0
  1591  000A9A  9C9E               	bcf	3998,6,c	;volatile
  1592                           
  1593                           ;CNY.c: 20: data[actualChannel++] = ADRESH << 8 + ADRESL;
  1594  000A9C  CFC3 F001          	movff	4035,??_cnyInterrupt	;volatile
  1595  000AA0  0E08               	movlw	8
  1596  000AA2  2601               	addwf	??_cnyInterrupt,f,c
  1597  000AA4  50C4               	movf	4036,w,c	;volatile
  1598  000AA6  6E02               	movwf	(??_cnyInterrupt+1)& (0+255),c
  1599  000AA8  6A03               	clrf	(??_cnyInterrupt+2)& (0+255),c
  1600  000AAA  2A01               	incf	??_cnyInterrupt,f,c
  1601  000AAC  D003               	goto	i2u45_44
  1602  000AAE                     i2u45_45:
  1603  000AAE  90D8               	bcf	status,0,c
  1604  000AB0  3602               	rlcf	??_cnyInterrupt+1,f,c
  1605  000AB2  3603               	rlcf	??_cnyInterrupt+2,f,c
  1606  000AB4                     i2u45_44:
  1607  000AB4  2E01               	decfsz	??_cnyInterrupt,f,c
  1608  000AB6  D7FB               	goto	i2u45_45
  1609  000AB8  5035               	movf	_actualChannel,w,c
  1610  000ABA  0D02               	mullw	2
  1611  000ABC  0E24               	movlw	low _data
  1612  000ABE  24F3               	addwf	prodl,w,c
  1613  000AC0  6ED9               	movwf	fsr2l,c
  1614  000AC2  0E00               	movlw	high _data
  1615  000AC4  20F4               	addwfc	prodh,w,c
  1616  000AC6  6EDA               	movwf	fsr2h,c
  1617  000AC8  C002  FFDE         	movff	??_cnyInterrupt+1,postinc2
  1618  000ACC  C003  FFDD         	movff	??_cnyInterrupt+2,postdec2
  1619  000AD0  2A35               	incf	_actualChannel,f,c
  1620                           
  1621                           ;CNY.c: 21: ADCON0bits.CHS = channels[actualChannel];
  1622  000AD2  5035               	movf	_actualChannel,w,c
  1623  000AD4  0D01               	mullw	1
  1624  000AD6  0E01               	movlw	low _channels
  1625  000AD8  24F3               	addwf	prodl,w,c
  1626  000ADA  6EF6               	movwf	tblptrl,c
  1627  000ADC  0E08               	movlw	high _channels
  1628  000ADE  20F4               	addwfc	prodh,w,c
  1629  000AE0  6EF7               	movwf	tblptrh,c
  1630  000AE2                     	if	0	;There are less than 3 active tblptr bytes
  1631  000AE2                     	endif
  1632  000AE2  0008               	tblrd		*
  1633  000AE4  CFF5 F001          	movff	tablat,??_cnyInterrupt
  1634  000AE8  4601               	rlncf	??_cnyInterrupt,f,c
  1635  000AEA  4601               	rlncf	??_cnyInterrupt,f,c
  1636  000AEC  50C2               	movf	4034,w,c	;volatile
  1637  000AEE  1801               	xorwf	??_cnyInterrupt,w,c
  1638  000AF0  0BC3               	andlw	-61
  1639  000AF2  1801               	xorwf	??_cnyInterrupt,w,c
  1640  000AF4  6EC2               	movwf	4034,c	;volatile
  1641                           
  1642                           ;CNY.c: 22: ADCON0bits.GO = 1;
  1643  000AF6  82C2               	bsf	4034,1,c	;volatile
  1644  000AF8  0012               	return		;funcret
  1645  000AFA                     __end_of_cnyInterrupt:
  1646                           	opt stack 0
  1647                           pclatu	equ	0xFFB
  1648                           pclath	equ	0xFFA
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           prodh	equ	0xFF4
  1654                           prodl	equ	0xFF3
  1655                           intcon	equ	0xFF2
  1656                           postinc0	equ	0xFEE
  1657                           fsr0h	equ	0xFEA
  1658                           fsr0l	equ	0xFE9
  1659                           wreg	equ	0xFE8
  1660                           fsr1h	equ	0xFE2
  1661                           fsr1l	equ	0xFE1
  1662                           postinc2	equ	0xFDE
  1663                           postdec2	equ	0xFDD
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           pclatu	equ	0xFFB
  1668                           pclath	equ	0xFFA
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           intcon	equ	0xFF2
  1676                           postinc0	equ	0xFEE
  1677                           fsr0h	equ	0xFEA
  1678                           fsr0l	equ	0xFE9
  1679                           wreg	equ	0xFE8
  1680                           fsr1h	equ	0xFE2
  1681                           fsr1l	equ	0xFE1
  1682                           postinc2	equ	0xFDE
  1683                           postdec2	equ	0xFDD
  1684                           fsr2h	equ	0xFDA
  1685                           fsr2l	equ	0xFD9
  1686                           status	equ	0xFD8
  1687                           
  1688                           	psect	rparam
  1689  0000                     pclatu	equ	0xFFB
  1690                           pclath	equ	0xFFA
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           prodh	equ	0xFF4
  1696                           prodl	equ	0xFF3
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           fsr0h	equ	0xFEA
  1700                           fsr0l	equ	0xFE9
  1701                           wreg	equ	0xFE8
  1702                           fsr1h	equ	0xFE2
  1703                           fsr1l	equ	0xFE1
  1704                           postinc2	equ	0xFDE
  1705                           postdec2	equ	0xFDD
  1706                           fsr2h	equ	0xFDA
  1707                           fsr2l	equ	0xFD9
  1708                           status	equ	0xFD8
  1709                           
  1710                           	psect	temp
  1711  000036                     btemp:
  1712                           	opt stack 0
  1713  000036                     	ds	1
  1714  0000                     int$flags	set	btemp
  1715  0000                     wtemp6	set	btemp+1
  1716                           pclatu	equ	0xFFB
  1717                           pclath	equ	0xFFA
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           prodh	equ	0xFF4
  1723                           prodl	equ	0xFF3
  1724                           intcon	equ	0xFF2
  1725                           postinc0	equ	0xFEE
  1726                           fsr0h	equ	0xFEA
  1727                           fsr0l	equ	0xFE9
  1728                           wreg	equ	0xFE8
  1729                           fsr1h	equ	0xFE2
  1730                           fsr1l	equ	0xFE1
  1731                           postinc2	equ	0xFDE
  1732                           postdec2	equ	0xFDD
  1733                           fsr2h	equ	0xFDA
  1734                           fsr2l	equ	0xFD9
  1735                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_setMotors
    _setMotors->___awdiv
    _setLEDs->_setLEDG
    _setLEDs->_setLEDR
    _setLEDs->_setLEDY

Critical Paths under _ISR in COMRAM

    _ISR->_cnyInterrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1333
                            _initCNY
                     _initInterrupts
                         _initMotors
                          _initTimer
                             _initUI
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    1333
                            _setLEDs
                          _setMotors
 ---------------------------------------------------------------------------------
 (2) _setMotors                                            6     2      4    1070
                                             29 COMRAM     6     2      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _setLEDs                                              3     1      2     263
                                             22 COMRAM     3     1      2
                            _setLEDG
                            _setLEDR
                            _setLEDY
 ---------------------------------------------------------------------------------
 (3) _setLEDY                                              1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _setLEDR                                              1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _setLEDG                                              1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUI                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCNY                                              1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 18    18      0       0
                                              3 COMRAM    18    18      0
                       _cnyInterrupt
                     _timerInterrupt
 ---------------------------------------------------------------------------------
 (5) _timerInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _cnyInterrupt                                         3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initCNY
   _initInterrupts
   _initMotors
   _initTimer
   _initUI
   _loop
     _setLEDs
       _setLEDG
       _setLEDR
       _setLEDY
     _setMotors
       ___awdiv

 _ISR (ROOT)
   _cnyInterrupt
   _timerInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      35       1       56.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      20        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 10 23:11:56 2018

                     l50 086E                       l51 088E                       l52 08A6  
                     l53 08BE                       l96 0B88                       l97 0B64  
                     u15 0C36                       u16 0C38                       u25 0C28  
                     u26 0C2A                       u35 0C44                       u36 0C46  
           ___awdiv@sign 001B              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l107 0BF0                      l330 0A2A                      l331 0A3A  
                    l333 0A58                      l334 0A50                      l337 0A78  
                    l338 0A82                      l339 0A90             __CFG_CPB$OFF 000000  
                    u320 0A5C                      u350 081C                      _PR2 000FCB  
                    u351 0816                      u370 0842             __CFG_CPD$OFF 000000  
                    u435 08C8                      u371 083C                      _ISR 0008  
                    u445 08F8                      u368 081E                      u388 0844  
           __CFG_BOR$OFF 000000                      prod 000FF3                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
         ??_cnyInterrupt 0001                     i2l70 0BBE             __CFG_WDTPS$1 000000  
                   _data 0024                     _main 0BDC                     _loop 0B62  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0036                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___param_bank 000000  
       ??_timerInterrupt 0001           setMotors@right 0020                    ??_ISR 0004  
          __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 0A9A                    ?_loop 0001                    _T0CON 000FD5  
        ___awdiv@divisor 0018                    _T2CON 000FCA          ___awdiv@counter 001A  
          __CFG_USBDIV$2 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initCNY 0B62  
         __CFG_EBTRB$OFF 000000          __end_of_setLEDG 0C48          __end_of_setLEDR 0C3A  
        __end_of_setLEDY 0C2C          __end_of_setLEDs 0C0C                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 0037  
         __CFG_PBADEN$ON 000000           __CFG_MCLRE$OFF 000000          __initialization 0BC2  
           __end_of_main 0BF6             __end_of_loop 0B92                   ??_main 0024  
                 ??_loop 0024            __activetblptr 000002                   _ADCON1 000FC1  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         ___awdiv@dividend 0016          _fractionCounter 0032  
       __end_of_channels 0806           __CFG_XINST$OFF 000000                ??___awdiv 001A  
                 _initUI 0C0C     __end_of_cnyInterrupt 0AFA                   clear_0 0BC8  
       ___awdiv@quotient 001C                ??_initCNY 0016                ??_setLEDG 0016  
              ??_setLEDR 0016                ??_setLEDY 0016                ??_setLEDs 0019  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0BCE  
          ___rparam_used 000001           __pcstackCOMRAM 0001  __size_of_initInterrupts 0006  
     __size_of_initTimer 000A                  ?_initUI 0001       __size_of_setMotors 0170  
                i2u45_44 0AB4                  i2u45_45 0AAE          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000    __size_of_cnyInterrupt 0060  
                ___awdiv 0A16               _initMotors 0AFA             __psmallconst 0800  
        __CFG_STVREN$OFF 000000          __size_of_initUI 0012                  __pcinit 0BC2  
                __ramtop 0800                  __ptext0 0BDC                  __ptext1 0B62  
                __ptext2 0808                  __ptext3 0A16                  __ptext4 0BF6  
                __ptext5 0C1E                  __ptext6 0C2C                  __ptext7 0C3A  
                __ptext8 0C0C                  __ptext9 0C48            _millisCounter 002E  
           __size_of_ISR 0A0E                  _initCNY 0B30        __end_of_initTimer 0C52  
                _setLEDG 0C3A                  _setLEDR 0C2C                  _setLEDY 0C1E  
                _setLEDs 0BF6           __pintcode_body 0978     end_of_initialization 0BCE  
      __end_of_setMotors 0978             _cnyInterrupt 0A9A            __Lmediumconst 0000  
                int_func 0978                  postdec2 000FDD           _initInterrupts 0C52  
                postinc0 000FEE                  postinc2 000FDE                _PORTBbits 000F81  
__size_of_timerInterrupt 0030                _TRISBbits 000F93                _TRISCbits 000F94  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA   __end_of_initInterrupts 0C58  
          setMotors@left 001E              ?_initMotors 0001           __end_of_initUI 0C1E  
          _actualChannel 0035      start_initialization 0BC2              __end_of_ISR 0A16  
        ?_initInterrupts 0001         __CFG_LPT1OSC$OFF 000000                 ??_initUI 0016  
            __pbssCOMRAM 0024      __size_of_initMotors 0036               loop@status 0034  
              __pintcode 0008                 ?___awdiv 0016                 ?_initCNY 0001  
            __smallconst 0800           _timerInterrupt 0B92                 ?_setLEDG 0001  
               ?_setLEDR 0001                 ?_setLEDY 0001                 ?_setLEDs 0017  
              _initTimer 0C48                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _PIE1bits 000F9D                _setMotors 0808                 _PIR1bits 000F9E  
 __end_of_timerInterrupt 0BC2               _ADCON0bits 000FC2               ?_initTimer 0001  
             ?_setMotors 001E                 __Hrparam 0000                 __Lrparam 0000  
           ??_initMotors 0016         __size_of___awdiv 0084          ?_timerInterrupt 0001  
       __size_of_initCNY 0032                 _channels 0801         __size_of_setLEDG 000E  
       __size_of_setLEDR 000E         __size_of_setLEDY 000E         __size_of_setLEDs 0016  
               __ptext10 0AFA                 __ptext11 0C52                 __ptext12 0B30  
               __ptext14 0B92                 __ptext15 0A9A       __end_of_initMotors 0B30  
       ??_initInterrupts 0016            __size_of_main 001A            __size_of_loop 0030  
               int$flags 0036    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               setLEDG@v 0016                 setLEDR@v 0016                 setLEDY@v 0016  
            ??_initTimer 0016                 setLEDs@g 0018                 setLEDs@r 0019  
               setLEDs@y 0017                 intlevel2 0000              ??_setMotors 0022  
     __CFG_FOSC$HSPLL_HS 000000            ?_cnyInterrupt 0001  
