

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 10 23:31:41 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F2550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	opt stack 0
    68  000800  00                 	db	0
    69  000801                     _channels:
    70                           	opt stack 0
    71  000801  04                 	db	4
    72  000802  03                 	db	3
    73  000803  02                 	db	2
    74  000804  01                 	db	1
    75  000805  00                 	db	0
    76  000806                     __end_of_channels:
    77                           	opt stack 0
    78  0000                     _PORTBbits	set	3969
    79  0000                     _LATBbits	set	3978
    80  0000                     _TRISBbits	set	3987
    81  0000                     _T0CON	set	4053
    82  0000                     _INTCONbits	set	4082
    83  0000                     _T2CON	set	4042
    84  0000                     _CCP2CONbits	set	4026
    85  0000                     _CCP1CONbits	set	4029
    86  0000                     _CCPR2L	set	4027
    87  0000                     _CCPR1L	set	4030
    88  0000                     _PR2	set	4043
    89  0000                     _LATCbits	set	3979
    90  0000                     _TRISCbits	set	3988
    91  0000                     _ADRESL	set	4035
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _PIE1bits	set	3997
    95  0000                     _PIR1bits	set	3998
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADCON1	set	4033
    98                           
    99                           ; #config settings
   100  000806  00                 	db	0	; dummy byte at the end
   101  0000                     
   102                           	psect	cinit
   103  000BC6                     __pcinit:
   104                           	opt stack 0
   105  000BC6                     start_initialization:
   106                           	opt stack 0
   107  000BC6                     __initialization:
   108                           	opt stack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (18 bytes)
   111  000BC6  EE00  F024         	lfsr	0,__pbssCOMRAM
   112  000BCA  0E12               	movlw	18
   113  000BCC                     clear_0:
   114  000BCC  6AEE               	clrf	postinc0,c
   115  000BCE  06E8               	decf	wreg,f,c
   116  000BD0  E1FD               	bnz	clear_0
   117  000BD2                     end_of_initialization:
   118                           	opt stack 0
   119  000BD2                     __end_of__initialization:
   120                           	opt stack 0
   121  000BD2  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   122  000BD4  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   123  000BD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   124  000BD8  6EF8               	movwf	tblptru,c
   125  000BDA  0100               	movlb	0
   126  000BDC  EFF0  F005         	goto	_main	;jump to C main() function
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	bssCOMRAM
   132  000024                     __pbssCOMRAM:
   133                           	opt stack 0
   134  000024                     _data:
   135                           	opt stack 0
   136  000024                     	ds	10
   137  00002E                     _millisCounter:
   138                           	opt stack 0
   139  00002E                     	ds	4
   140  000032                     _fractionCounter:
   141                           	opt stack 0
   142  000032                     	ds	2
   143  000034                     loop@status:
   144                           	opt stack 0
   145  000034                     	ds	1
   146  000035                     _actualChannel:
   147                           	opt stack 0
   148  000035                     	ds	1
   149                           tblptru	equ	0xFF8
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           
   153                           	psect	cstackCOMRAM
   154  000001                     __pcstackCOMRAM:
   155                           	opt stack 0
   156  000001                     ??_cnyInterrupt:
   157  000001                     
   158                           ; 1 bytes @ 0x0
   159  000001                     	ds	3
   160  000004                     ??_ISR:
   161                           
   162                           ; 1 bytes @ 0x3
   163  000004                     	ds	18
   164  000016                     ??_initCNY:
   165  000016                     ?___awdiv:
   166                           	opt stack 0
   167  000016                     setLEDR@v:
   168                           	opt stack 0
   169  000016                     setLEDY@v:
   170                           	opt stack 0
   171  000016                     setLEDG@v:
   172                           	opt stack 0
   173  000016                     ___awdiv@dividend:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x15
   177  000016                     	ds	1
   178  000017                     setLEDs@y:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x16
   182  000017                     	ds	1
   183  000018                     setLEDs@g:
   184                           	opt stack 0
   185  000018                     ___awdiv@divisor:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x17
   189  000018                     	ds	1
   190  000019                     setLEDs@r:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x18
   194  000019                     	ds	1
   195  00001A                     ___awdiv@counter:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x19
   199  00001A                     	ds	1
   200  00001B                     ___awdiv@sign:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x1A
   204  00001B                     	ds	1
   205  00001C                     ___awdiv@quotient:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x1B
   209  00001C                     	ds	2
   210  00001E                     setMotors@left:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x1D
   214  00001E                     	ds	2
   215  000020                     setMotors@right:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x1F
   219  000020                     	ds	2
   220  000022                     ??_setMotors:
   221                           
   222                           ; 1 bytes @ 0x21
   223  000022                     	ds	2
   224  000024                     tblptru	equ	0xFF8
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           
   228                           ; 1 bytes @ 0x23
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 26 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   248 ;;      Params:         0       0       0       0       0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called:    5
   254 ;; This function calls:
   255 ;;		_initCNY
   256 ;;		_initInterrupts
   257 ;;		_initMotors
   258 ;;		_initTimer
   259 ;;		_initUI
   260 ;;		_loop
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text0
   267  000BE0                     __ptext0:
   268                           	opt stack 0
   269  000BE0                     _main:
   270                           	opt stack 26
   271                           
   272                           ;main.c: 27: initInterrupts();
   273                           
   274                           ;incstack = 0
   275  000BE0  EC2B  F006         	call	_initInterrupts	;wreg free
   276                           
   277                           ;main.c: 28: initTimer();
   278  000BE4  EC26  F006         	call	_initTimer	;wreg free
   279                           
   280                           ;main.c: 29: initUI();
   281  000BE8  EC08  F006         	call	_initUI	;wreg free
   282                           
   283                           ;main.c: 30: initMotors();
   284  000BEC  EC7D  F005         	call	_initMotors	;wreg free
   285                           
   286                           ;main.c: 31: initCNY();
   287  000BF0  EC98  F005         	call	_initCNY	;wreg free
   288  000BF4  ECB3  F005         	call	_loop	;wreg free
   289  000BF8  D7FD               	goto	l109
   290  000BFA                     __end_of_main:
   291                           	opt stack 0
   292                           tblptru	equ	0xFF8
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296 ;; *************** function _loop *****************
   297 ;; Defined at:
   298 ;;		line 12 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    4
   319 ;; This function calls:
   320 ;;		_setLEDs
   321 ;;		_setMotors
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328  000B66                     __ptext1:
   329                           	opt stack 0
   330  000B66                     _loop:
   331                           	opt stack 26
   332                           
   333                           ;main.c: 13: static char status = MENU;
   334                           ;main.c: 14: switch(status){
   335                           
   336                           ;incstack = 0
   337  000B66  D012               	goto	l98
   338  000B68                     
   339                           ;main.c: 16: setMotors(0, 0);
   340  000B68  0E00               	movlw	0
   341  000B6A  6E1F               	movwf	setMotors@left+1,c
   342  000B6C  0E00               	movlw	0
   343  000B6E  6E1E               	movwf	setMotors@left,c
   344  000B70  0E00               	movlw	0
   345  000B72  6E21               	movwf	setMotors@right+1,c
   346  000B74  0E00               	movlw	0
   347  000B76  6E20               	movwf	setMotors@right,c
   348  000B78  EC04  F004         	call	_setMotors	;wreg free
   349                           
   350                           ;main.c: 17: setLEDs(1, 0, 0);
   351  000B7C  0E00               	movlw	0
   352  000B7E  6E17               	movwf	setLEDs@y,c
   353  000B80  0E00               	movlw	0
   354  000B82  6E18               	movwf	setLEDs@g,c
   355  000B84  0E01               	movlw	1
   356  000B86  ECFD  F005         	call	_setLEDs
   357                           
   358                           ;main.c: 19: }
   359                           
   360                           ;main.c: 18: break;
   361  000B8A  0012               	return	
   362  000B8C                     l98:
   363  000B8C  5034               	movf	loop@status,w,c
   364                           
   365                           ; Switch size 1, requested type "space"
   366                           ; Number of cases is 1, Range of values is 0 to 0
   367                           ; switch strategies available:
   368                           ; Name         Instructions Cycles
   369                           ; simple_byte            4     3 (average)
   370                           ;	Chosen strategy is simple_byte
   371  000B8E  0A00               	xorlw	0	; case 0
   372  000B90  A4D8               	btfss	status,2,c
   373  000B92  0012               	return	
   374  000B94  D7E9               	goto	l99
   375  000B96                     __end_of_loop:
   376                           	opt stack 0
   377                           tblptru	equ	0xFF8
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           status	equ	0xFD8
   381                           
   382 ;; *************** function _setMotors *****************
   383 ;; Defined at:
   384 ;;		line 34 in file "motors.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  left            2   29[COMRAM] int 
   387 ;;  right           2   31[COMRAM] int 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   399 ;;      Params:         4       0       0       0       0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0       0       0       0       0
   401 ;;      Temps:          2       0       0       0       0       0       0       0       0
   402 ;;      Totals:         6       0       0       0       0       0       0       0       0
   403 ;;Total ram usage:        6 bytes
   404 ;; Hardware stack levels used:    1
   405 ;; Hardware stack levels required when called:    3
   406 ;; This function calls:
   407 ;;		___awdiv
   408 ;; This function is called by:
   409 ;;		_loop
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text2
   414  000808                     __ptext2:
   415                           	opt stack 0
   416  000808                     _setMotors:
   417                           	opt stack 26
   418                           
   419                           ;motors.c: 35: LATCbits.LATC6 = left <= 0;
   420                           
   421                           ;incstack = 0
   422  000808  BE1F               	btfsc	setMotors@left+1,7,c
   423  00080A  D005               	goto	u351
   424  00080C  501F               	movf	setMotors@left+1,w,c
   425  00080E  E106               	bnz	u350
   426  000810  041E               	decf	setMotors@left,w,c
   427  000812  B0D8               	btfsc	status,0,c
   428  000814  D003               	goto	u350
   429  000816                     u351:
   430  000816  6A22               	clrf	??_setMotors& (0+255),c
   431  000818  2A22               	incf	??_setMotors& (0+255),f,c
   432  00081A  D001               	goto	u368
   433  00081C                     u350:
   434  00081C  6A22               	clrf	??_setMotors& (0+255),c
   435  00081E                     u368:
   436  00081E  3A22               	swapf	??_setMotors,f,c
   437  000820  4622               	rlncf	??_setMotors,f,c
   438  000822  4622               	rlncf	??_setMotors,f,c
   439  000824  508B               	movf	3979,w,c	;volatile
   440  000826  1822               	xorwf	??_setMotors,w,c
   441  000828  0BBF               	andlw	-65
   442  00082A  1822               	xorwf	??_setMotors,w,c
   443  00082C  6E8B               	movwf	3979,c	;volatile
   444                           
   445                           ;motors.c: 36: LATCbits.LATC0 = right <= 0;
   446  00082E  BE21               	btfsc	setMotors@right+1,7,c
   447  000830  D005               	goto	u371
   448  000832  5021               	movf	setMotors@right+1,w,c
   449  000834  E106               	bnz	u370
   450  000836  0420               	decf	setMotors@right,w,c
   451  000838  B0D8               	btfsc	status,0,c
   452  00083A  D003               	goto	u370
   453  00083C                     u371:
   454  00083C  6A22               	clrf	??_setMotors& (0+255),c
   455  00083E  2A22               	incf	??_setMotors& (0+255),f,c
   456  000840  D001               	goto	u388
   457  000842                     u370:
   458  000842  6A22               	clrf	??_setMotors& (0+255),c
   459  000844                     u388:
   460  000844  508B               	movf	3979,w,c	;volatile
   461  000846  1822               	xorwf	??_setMotors,w,c
   462  000848  0BFE               	andlw	-2
   463  00084A  1822               	xorwf	??_setMotors,w,c
   464  00084C  6E8B               	movwf	3979,c	;volatile
   465                           
   466                           ;motors.c: 37: if(left < 0) left = 1000 - left;
   467  00084E  AE1F               	btfss	setMotors@left+1,7,c
   468  000850  D00E               	goto	l52
   469  000852  C01E  F022         	movff	setMotors@left,??_setMotors
   470  000856  C01F  F023         	movff	setMotors@left+1,??_setMotors+1
   471  00085A  1E22               	comf	??_setMotors,f,c
   472  00085C  1E23               	comf	??_setMotors+1,f,c
   473  00085E  4A22               	infsnz	??_setMotors,f,c
   474  000860  2A23               	incf	??_setMotors+1,f,c
   475  000862  0EE8               	movlw	232
   476  000864  2422               	addwf	??_setMotors,w,c
   477  000866  6E1E               	movwf	setMotors@left,c
   478  000868  0E03               	movlw	3
   479  00086A  2023               	addwfc	??_setMotors+1,w,c
   480  00086C  6E1F               	movwf	setMotors@left+1,c
   481  00086E                     l52:
   482                           
   483                           ;motors.c: 38: if(right < 0) right = 1000 - right;
   484  00086E  AE21               	btfss	setMotors@right+1,7,c
   485  000870  D00E               	goto	l53
   486  000872  C020  F022         	movff	setMotors@right,??_setMotors
   487  000876  C021  F023         	movff	setMotors@right+1,??_setMotors+1
   488  00087A  1E22               	comf	??_setMotors,f,c
   489  00087C  1E23               	comf	??_setMotors+1,f,c
   490  00087E  4A22               	infsnz	??_setMotors,f,c
   491  000880  2A23               	incf	??_setMotors+1,f,c
   492  000882  0EE8               	movlw	232
   493  000884  2422               	addwf	??_setMotors,w,c
   494  000886  6E20               	movwf	setMotors@right,c
   495  000888  0E03               	movlw	3
   496  00088A  2023               	addwfc	??_setMotors+1,w,c
   497  00088C  6E21               	movwf	setMotors@right+1,c
   498  00088E                     l53:
   499                           
   500                           ;motors.c: 39: if(left > 1000) left = 1000;
   501  00088E  BE1F               	btfsc	setMotors@left+1,7,c
   502  000890  D00A               	goto	l54
   503  000892  0EE9               	movlw	233
   504  000894  5C1E               	subwf	setMotors@left,w,c
   505  000896  0E03               	movlw	3
   506  000898  581F               	subwfb	setMotors@left+1,w,c
   507  00089A  A0D8               	btfss	status,0,c
   508  00089C  D004               	goto	l54
   509  00089E  0E03               	movlw	3
   510  0008A0  6E1F               	movwf	setMotors@left+1,c
   511  0008A2  0EE8               	movlw	232
   512  0008A4  6E1E               	movwf	setMotors@left,c
   513  0008A6                     l54:
   514                           
   515                           ;motors.c: 40: if(right > 1000) right = 1000;
   516  0008A6  BE21               	btfsc	setMotors@right+1,7,c
   517  0008A8  D00A               	goto	l55
   518  0008AA  0EE9               	movlw	233
   519  0008AC  5C20               	subwf	setMotors@right,w,c
   520  0008AE  0E03               	movlw	3
   521  0008B0  5821               	subwfb	setMotors@right+1,w,c
   522  0008B2  A0D8               	btfss	status,0,c
   523  0008B4  D004               	goto	l55
   524  0008B6  0E03               	movlw	3
   525  0008B8  6E21               	movwf	setMotors@right+1,c
   526  0008BA  0EE8               	movlw	232
   527  0008BC  6E20               	movwf	setMotors@right,c
   528  0008BE                     l55:
   529                           
   530                           ;motors.c: 41: left = left * 1024 / 1000;
   531  0008BE  C01E  F022         	movff	setMotors@left,??_setMotors
   532  0008C2  C01F  F023         	movff	setMotors@left+1,??_setMotors+1
   533  0008C6  0E0A               	movlw	10
   534  0008C8                     u435:
   535  0008C8  90D8               	bcf	status,0,c
   536  0008CA  3622               	rlcf	??_setMotors,f,c
   537  0008CC  3623               	rlcf	??_setMotors+1,f,c
   538  0008CE  2EE8               	decfsz	wreg,f,c
   539  0008D0  D7FB               	goto	u435
   540  0008D2  C022  F016         	movff	??_setMotors,___awdiv@dividend
   541  0008D6  C023  F017         	movff	??_setMotors+1,___awdiv@dividend+1
   542  0008DA  0E03               	movlw	3
   543  0008DC  6E19               	movwf	___awdiv@divisor+1,c
   544  0008DE  0EE8               	movlw	232
   545  0008E0  6E18               	movwf	___awdiv@divisor,c
   546  0008E2  EC0B  F005         	call	___awdiv	;wreg free
   547  0008E6  C016  F01E         	movff	?___awdiv,setMotors@left
   548  0008EA  C017  F01F         	movff	?___awdiv+1,setMotors@left+1
   549                           
   550                           ;motors.c: 42: right = right * 1024 / 1000;
   551  0008EE  C020  F022         	movff	setMotors@right,??_setMotors
   552  0008F2  C021  F023         	movff	setMotors@right+1,??_setMotors+1
   553  0008F6  0E0A               	movlw	10
   554  0008F8                     u445:
   555  0008F8  90D8               	bcf	status,0,c
   556  0008FA  3622               	rlcf	??_setMotors,f,c
   557  0008FC  3623               	rlcf	??_setMotors+1,f,c
   558  0008FE  2EE8               	decfsz	wreg,f,c
   559  000900  D7FB               	goto	u445
   560  000902  C022  F016         	movff	??_setMotors,___awdiv@dividend
   561  000906  C023  F017         	movff	??_setMotors+1,___awdiv@dividend+1
   562  00090A  0E03               	movlw	3
   563  00090C  6E19               	movwf	___awdiv@divisor+1,c
   564  00090E  0EE8               	movlw	232
   565  000910  6E18               	movwf	___awdiv@divisor,c
   566  000912  EC0B  F005         	call	___awdiv	;wreg free
   567  000916  C016  F020         	movff	?___awdiv,setMotors@right
   568  00091A  C017  F021         	movff	?___awdiv+1,setMotors@right+1
   569                           
   570                           ;motors.c: 43: CCP2CONbits.DC2B = left & 3;
   571  00091E  C01E  F022         	movff	setMotors@left,??_setMotors
   572  000922  0E03               	movlw	3
   573  000924  1622               	andwf	??_setMotors,f,c
   574  000926  3A22               	swapf	??_setMotors,f,c
   575  000928  50BA               	movf	4026,w,c	;volatile
   576  00092A  1822               	xorwf	??_setMotors,w,c
   577  00092C  0BCF               	andlw	-49
   578  00092E  1822               	xorwf	??_setMotors,w,c
   579  000930  6EBA               	movwf	4026,c	;volatile
   580                           
   581                           ;motors.c: 44: CCP1CONbits.DC1B = right & 3;
   582  000932  C020  F022         	movff	setMotors@right,??_setMotors
   583  000936  0E03               	movlw	3
   584  000938  1622               	andwf	??_setMotors,f,c
   585  00093A  3A22               	swapf	??_setMotors,f,c
   586  00093C  50BD               	movf	4029,w,c	;volatile
   587  00093E  1822               	xorwf	??_setMotors,w,c
   588  000940  0BCF               	andlw	-49
   589  000942  1822               	xorwf	??_setMotors,w,c
   590  000944  6EBD               	movwf	4029,c	;volatile
   591                           
   592                           ;motors.c: 45: CCPR2L = left >> 2;
   593  000946  C01E  F022         	movff	setMotors@left,??_setMotors
   594  00094A  C01F  F023         	movff	setMotors@left+1,??_setMotors+1
   595  00094E  3423               	rlcf	??_setMotors+1,w,c
   596  000950  3223               	rrcf	??_setMotors+1,f,c
   597  000952  3222               	rrcf	??_setMotors,f,c
   598  000954  3423               	rlcf	??_setMotors+1,w,c
   599  000956  3223               	rrcf	??_setMotors+1,f,c
   600  000958  3222               	rrcf	??_setMotors,f,c
   601  00095A  5022               	movf	??_setMotors,w,c
   602  00095C  6EBB               	movwf	4027,c	;volatile
   603                           
   604                           ;motors.c: 46: CCPR1L = right >> 2;
   605  00095E  C020  F022         	movff	setMotors@right,??_setMotors
   606  000962  C021  F023         	movff	setMotors@right+1,??_setMotors+1
   607  000966  3423               	rlcf	??_setMotors+1,w,c
   608  000968  3223               	rrcf	??_setMotors+1,f,c
   609  00096A  3222               	rrcf	??_setMotors,f,c
   610  00096C  3423               	rlcf	??_setMotors+1,w,c
   611  00096E  3223               	rrcf	??_setMotors+1,f,c
   612  000970  3222               	rrcf	??_setMotors,f,c
   613  000972  5022               	movf	??_setMotors,w,c
   614  000974  6EBE               	movwf	4030,c	;volatile
   615  000976  0012               	return		;funcret
   616  000978                     __end_of_setMotors:
   617                           	opt stack 0
   618                           tblptru	equ	0xFF8
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           status	equ	0xFD8
   622                           
   623 ;; *************** function ___awdiv *****************
   624 ;; Defined at:
   625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  dividend        2   21[COMRAM] int 
   628 ;;  divisor         2   23[COMRAM] int 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  quotient        2   27[COMRAM] int 
   631 ;;  sign            1   26[COMRAM] unsigned char 
   632 ;;  counter         1   25[COMRAM] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2   21[COMRAM] int 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         4       0       0       0       0       0       0       0       0
   643 ;;      Locals:         4       0       0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0
   645 ;;      Totals:         8       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        8 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    2
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_setMotors
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657  000A16                     __ptext3:
   658                           	opt stack 0
   659  000A16                     ___awdiv:
   660                           	opt stack 26
   661                           
   662                           ;incstack = 0
   663  000A16  0E00               	movlw	0
   664  000A18  6E1B               	movwf	___awdiv@sign,c
   665  000A1A  AE19               	btfss	___awdiv@divisor+1,7,c
   666  000A1C  D006               	goto	l332
   667  000A1E  6C18               	negf	___awdiv@divisor,c
   668  000A20  1E19               	comf	___awdiv@divisor+1,f,c
   669  000A22  B0D8               	btfsc	status,0,c
   670  000A24  2A19               	incf	___awdiv@divisor+1,f,c
   671  000A26  0E01               	movlw	1
   672  000A28  6E1B               	movwf	___awdiv@sign,c
   673  000A2A                     l332:
   674  000A2A  AE17               	btfss	___awdiv@dividend+1,7,c
   675  000A2C  D006               	goto	l333
   676  000A2E  6C16               	negf	___awdiv@dividend,c
   677  000A30  1E17               	comf	___awdiv@dividend+1,f,c
   678  000A32  B0D8               	btfsc	status,0,c
   679  000A34  2A17               	incf	___awdiv@dividend+1,f,c
   680  000A36  0E01               	movlw	1
   681  000A38  1A1B               	xorwf	___awdiv@sign,f,c
   682  000A3A                     l333:
   683  000A3A  0E00               	movlw	0
   684  000A3C  6E1D               	movwf	___awdiv@quotient+1,c
   685  000A3E  0E00               	movlw	0
   686  000A40  6E1C               	movwf	___awdiv@quotient,c
   687  000A42  5018               	movf	___awdiv@divisor,w,c
   688  000A44  1019               	iorwf	___awdiv@divisor+1,w,c
   689  000A46  B4D8               	btfsc	status,2,c
   690  000A48  D01C               	goto	l340
   691  000A4A  0E01               	movlw	1
   692  000A4C  6E1A               	movwf	___awdiv@counter,c
   693  000A4E  D004               	goto	l335
   694  000A50  90D8               	bcf	status,0,c
   695  000A52  3618               	rlcf	___awdiv@divisor,f,c
   696  000A54  3619               	rlcf	___awdiv@divisor+1,f,c
   697  000A56  2A1A               	incf	___awdiv@counter,f,c
   698  000A58                     l335:
   699  000A58  AE19               	btfss	___awdiv@divisor+1,7,c
   700  000A5A  D7FA               	goto	l336
   701  000A5C                     u320:
   702  000A5C  90D8               	bcf	status,0,c
   703  000A5E  361C               	rlcf	___awdiv@quotient,f,c
   704  000A60  361D               	rlcf	___awdiv@quotient+1,f,c
   705  000A62  5018               	movf	___awdiv@divisor,w,c
   706  000A64  5C16               	subwf	___awdiv@dividend,w,c
   707  000A66  5019               	movf	___awdiv@divisor+1,w,c
   708  000A68  5817               	subwfb	___awdiv@dividend+1,w,c
   709  000A6A  A0D8               	btfss	status,0,c
   710  000A6C  D005               	goto	l339
   711  000A6E  5018               	movf	___awdiv@divisor,w,c
   712  000A70  5E16               	subwf	___awdiv@dividend,f,c
   713  000A72  5019               	movf	___awdiv@divisor+1,w,c
   714  000A74  5A17               	subwfb	___awdiv@dividend+1,f,c
   715  000A76  801C               	bsf	___awdiv@quotient,0,c
   716  000A78                     l339:
   717  000A78  90D8               	bcf	status,0,c
   718  000A7A  3219               	rrcf	___awdiv@divisor+1,f,c
   719  000A7C  3218               	rrcf	___awdiv@divisor,f,c
   720  000A7E  2E1A               	decfsz	___awdiv@counter,f,c
   721  000A80  D7ED               	goto	u320
   722  000A82                     l340:
   723  000A82  501B               	movf	___awdiv@sign,w,c
   724  000A84  B4D8               	btfsc	status,2,c
   725  000A86  D004               	goto	l341
   726  000A88  6C1C               	negf	___awdiv@quotient,c
   727  000A8A  1E1D               	comf	___awdiv@quotient+1,f,c
   728  000A8C  B0D8               	btfsc	status,0,c
   729  000A8E  2A1D               	incf	___awdiv@quotient+1,f,c
   730  000A90                     l341:
   731  000A90  C01C  F016         	movff	___awdiv@quotient,?___awdiv
   732  000A94  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
   733  000A98  0012               	return	
   734  000A9A                     __end_of___awdiv:
   735                           	opt stack 0
   736                           tblptru	equ	0xFF8
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           status	equ	0xFD8
   740                           
   741 ;; *************** function _setLEDs *****************
   742 ;; Defined at:
   743 ;;		line 32 in file "ui.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  r               1    wreg     unsigned char 
   746 ;;  y               1   22[COMRAM] unsigned char 
   747 ;;  g               1   23[COMRAM] unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  r               1   24[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   759 ;;      Params:         2       0       0       0       0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0
   762 ;;      Totals:         3       0       0       0       0       0       0       0       0
   763 ;;Total ram usage:        3 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    3
   766 ;; This function calls:
   767 ;;		_setLEDG
   768 ;;		_setLEDR
   769 ;;		_setLEDY
   770 ;; This function is called by:
   771 ;;		_loop
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text4
   776  000BFA                     __ptext4:
   777                           	opt stack 0
   778  000BFA                     _setLEDs:
   779                           	opt stack 26
   780                           
   781                           ;incstack = 0
   782                           ;setLEDs@r stored from wreg
   783  000BFA  6E19               	movwf	setLEDs@r,c
   784                           
   785                           ;ui.c: 33: setLEDR(r);
   786  000BFC  5019               	movf	setLEDs@r,w,c
   787  000BFE  EC18  F006         	call	_setLEDR
   788                           
   789                           ;ui.c: 34: setLEDY(y);
   790  000C02  5017               	movf	setLEDs@y,w,c
   791  000C04  EC11  F006         	call	_setLEDY
   792                           
   793                           ;ui.c: 35: setLEDG(g);
   794  000C08  5018               	movf	setLEDs@g,w,c
   795  000C0A  EC1F  F006         	call	_setLEDG
   796  000C0E  0012               	return		;funcret
   797  000C10                     __end_of_setLEDs:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           status	equ	0xFD8
   803                           
   804 ;; *************** function _setLEDY *****************
   805 ;; Defined at:
   806 ;;		line 54 in file "ui.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  v               1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  v               1   21[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         1       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        1 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    2
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_setLEDs
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text5
   835  000C22                     __ptext5:
   836                           	opt stack 0
   837  000C22                     _setLEDY:
   838                           	opt stack 26
   839                           
   840                           ;incstack = 0
   841                           ;setLEDY@v stored from wreg
   842  000C22  6E16               	movwf	setLEDY@v,c
   843                           
   844                           ;ui.c: 55: LATBbits.LB2 = v;
   845  000C24  B016               	btfsc	setLEDY@v,0,c
   846  000C26  D002               	bra	u25
   847  000C28  948A               	bcf	3978,2,c	;volatile
   848  000C2A  D001               	bra	u26
   849  000C2C                     u25:
   850  000C2C  848A               	bsf	3978,2,c	;volatile
   851  000C2E                     u26:
   852  000C2E  0012               	return		;funcret
   853  000C30                     __end_of_setLEDY:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           status	equ	0xFD8
   859                           
   860 ;; *************** function _setLEDR *****************
   861 ;; Defined at:
   862 ;;		line 50 in file "ui.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  v               1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  v               1   21[COMRAM] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         0       0       0       0       0       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0
   879 ;;      Totals:         1       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        1 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    2
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_setLEDs
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text6
   891  000C30                     __ptext6:
   892                           	opt stack 0
   893  000C30                     _setLEDR:
   894                           	opt stack 26
   895                           
   896                           ;incstack = 0
   897                           ;setLEDR@v stored from wreg
   898  000C30  6E16               	movwf	setLEDR@v,c
   899                           
   900                           ;ui.c: 51: LATBbits.LB1 = v;
   901  000C32  B016               	btfsc	setLEDR@v,0,c
   902  000C34  D002               	bra	u15
   903  000C36  928A               	bcf	3978,1,c	;volatile
   904  000C38  D001               	bra	u16
   905  000C3A                     u15:
   906  000C3A  828A               	bsf	3978,1,c	;volatile
   907  000C3C                     u16:
   908  000C3C  0012               	return		;funcret
   909  000C3E                     __end_of_setLEDR:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _setLEDG *****************
   917 ;; Defined at:
   918 ;;		line 58 in file "ui.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  v               1    wreg     unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  v               1   21[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         0       0       0       0       0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         1       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        1 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    2
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_setLEDs
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text7
   947  000C3E                     __ptext7:
   948                           	opt stack 0
   949  000C3E                     _setLEDG:
   950                           	opt stack 26
   951                           
   952                           ;incstack = 0
   953                           ;setLEDG@v stored from wreg
   954  000C3E  6E16               	movwf	setLEDG@v,c
   955                           
   956                           ;ui.c: 59: LATBbits.LB3 = v;
   957  000C40  B016               	btfsc	setLEDG@v,0,c
   958  000C42  D002               	bra	u35
   959  000C44  968A               	bcf	3978,3,c	;volatile
   960  000C46  D001               	bra	u36
   961  000C48                     u35:
   962  000C48  868A               	bsf	3978,3,c	;volatile
   963  000C4A                     u36:
   964  000C4A  0012               	return		;funcret
   965  000C4C                     __end_of_setLEDG:
   966                           	opt stack 0
   967                           tblptru	equ	0xFF8
   968                           postinc0	equ	0xFEE
   969                           wreg	equ	0xFE8
   970                           status	equ	0xFD8
   971                           
   972 ;; *************** function _initUI *****************
   973 ;; Defined at:
   974 ;;		line 18 in file "ui.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		None
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   988 ;;      Params:         0       0       0       0       0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0
   991 ;;      Totals:         0       0       0       0       0       0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    2
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text8
  1003  000C10                     __ptext8:
  1004                           	opt stack 0
  1005  000C10                     _initUI:
  1006                           	opt stack 28
  1007                           
  1008                           ;ui.c: 19: TRISBbits.RB1 = 0;
  1009                           
  1010                           ;incstack = 0
  1011  000C10  9293               	bcf	3987,1,c	;volatile
  1012                           
  1013                           ;ui.c: 20: LATBbits.LB1 = 0;
  1014  000C12  928A               	bcf	3978,1,c	;volatile
  1015                           
  1016                           ;ui.c: 22: TRISBbits.RB2 = 0;
  1017  000C14  9493               	bcf	3987,2,c	;volatile
  1018                           
  1019                           ;ui.c: 23: LATBbits.LB2 = 0;
  1020  000C16  948A               	bcf	3978,2,c	;volatile
  1021                           
  1022                           ;ui.c: 25: TRISBbits.RB3 = 0;
  1023  000C18  9693               	bcf	3987,3,c	;volatile
  1024                           
  1025                           ;ui.c: 26: LATBbits.LB3 = 0;
  1026  000C1A  968A               	bcf	3978,3,c	;volatile
  1027                           
  1028                           ;ui.c: 28: TRISBbits.RB0 = 1;
  1029  000C1C  8093               	bsf	3987,0,c	;volatile
  1030                           
  1031                           ;ui.c: 29: TRISBbits.RB5 = 1;
  1032  000C1E  8A93               	bsf	3987,5,c	;volatile
  1033  000C20  0012               	return		;funcret
  1034  000C22                     __end_of_initUI:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           status	equ	0xFD8
  1040                           
  1041 ;; *************** function _initTimer *****************
  1042 ;; Defined at:
  1043 ;;		line 21 in file "timer.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    2
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text9
  1072  000C4C                     __ptext9:
  1073                           	opt stack 0
  1074  000C4C                     _initTimer:
  1075                           	opt stack 28
  1076                           
  1077                           ;timer.c: 22: INTCONbits.TMR0IF = 0;
  1078                           
  1079                           ;incstack = 0
  1080  000C4C  94F2               	bcf	intcon,2,c	;volatile
  1081                           
  1082                           ;timer.c: 23: INTCONbits.TMR0IE = 1;
  1083  000C4E  8AF2               	bsf	intcon,5,c	;volatile
  1084                           
  1085                           ;timer.c: 24: T0CON = 0xC4;
  1086  000C50  0EC4               	movlw	196
  1087  000C52  6ED5               	movwf	4053,c	;volatile
  1088  000C54  0012               	return		;funcret
  1089  000C56                     __end_of_initTimer:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           intcon	equ	0xFF2
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           status	equ	0xFD8
  1096                           
  1097 ;; *************** function _initMotors *****************
  1098 ;; Defined at:
  1099 ;;		line 14 in file "motors.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    2
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text10
  1128  000AFA                     __ptext10:
  1129                           	opt stack 0
  1130  000AFA                     _initMotors:
  1131                           	opt stack 28
  1132                           
  1133                           ;motors.c: 15: TRISCbits.TRISC6 = 0;
  1134                           
  1135                           ;incstack = 0
  1136  000AFA  9C94               	bcf	3988,6,c	;volatile
  1137                           
  1138                           ;motors.c: 16: TRISCbits.TRISC0 = 0;
  1139  000AFC  9094               	bcf	3988,0,c	;volatile
  1140                           
  1141                           ;motors.c: 18: LATCbits.LATC0 = 0;
  1142  000AFE  908B               	bcf	3979,0,c	;volatile
  1143                           
  1144                           ;motors.c: 19: LATCbits.LATC6 = 0;
  1145  000B00  9C8B               	bcf	3979,6,c	;volatile
  1146                           
  1147                           ;motors.c: 21: TRISCbits.TRISC2 = 0;
  1148  000B02  9494               	bcf	3988,2,c	;volatile
  1149                           
  1150                           ;motors.c: 22: TRISCbits.TRISC1 = 0;
  1151  000B04  9294               	bcf	3988,1,c	;volatile
  1152                           
  1153                           ;motors.c: 24: PR2 = 249;
  1154  000B06  0EF9               	movlw	249
  1155  000B08  6ECB               	movwf	4043,c	;volatile
  1156                           
  1157                           ;motors.c: 25: CCPR1L = 0;
  1158  000B0A  0E00               	movlw	0
  1159  000B0C  6EBE               	movwf	4030,c	;volatile
  1160                           
  1161                           ;motors.c: 26: CCPR2L = 0;
  1162  000B0E  0E00               	movlw	0
  1163  000B10  6EBB               	movwf	4027,c	;volatile
  1164                           
  1165                           ;motors.c: 27: CCP1CONbits.DC1B = 0;
  1166  000B12  0ECF               	movlw	-49
  1167  000B14  16BD               	andwf	4029,f,c	;volatile
  1168                           
  1169                           ;motors.c: 28: CCP2CONbits.DC2B = 0;
  1170  000B16  0ECF               	movlw	-49
  1171  000B18  16BA               	andwf	4026,f,c	;volatile
  1172                           
  1173                           ;motors.c: 29: T2CON = 0x05;
  1174  000B1A  0E05               	movlw	5
  1175  000B1C  6ECA               	movwf	4042,c	;volatile
  1176                           
  1177                           ;motors.c: 30: CCP1CONbits.CCP1M = 0xF;
  1178  000B1E  80BD               	bsf	4029,0,c	;volatile
  1179  000B20  82BD               	bsf	4029,1,c	;volatile
  1180  000B22  84BD               	bsf	4029,2,c	;volatile
  1181  000B24  86BD               	bsf	4029,3,c	;volatile
  1182                           
  1183                           ;motors.c: 31: CCP2CONbits.CCP2M = 0xF;
  1184  000B26  80BA               	bsf	4026,0,c	;volatile
  1185  000B28  82BA               	bsf	4026,1,c	;volatile
  1186  000B2A  84BA               	bsf	4026,2,c	;volatile
  1187  000B2C  86BA               	bsf	4026,3,c	;volatile
  1188  000B2E  0012               	return		;funcret
  1189  000B30                     __end_of_initMotors:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           intcon	equ	0xFF2
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _initInterrupts *****************
  1198 ;; Defined at:
  1199 ;;		line 22 in file "main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		None
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text11
  1228  000C56                     __ptext11:
  1229                           	opt stack 0
  1230  000C56                     _initInterrupts:
  1231                           	opt stack 28
  1232                           
  1233                           ;main.c: 23: INTCONbits.PEIE = 1;
  1234                           
  1235                           ;incstack = 0
  1236  000C56  8CF2               	bsf	intcon,6,c	;volatile
  1237                           
  1238                           ;main.c: 24: INTCONbits.GIE = 1;
  1239  000C58  8EF2               	bsf	intcon,7,c	;volatile
  1240  000C5A  0012               	return		;funcret
  1241  000C5C                     __end_of_initInterrupts:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           intcon	equ	0xFF2
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           status	equ	0xFD8
  1248                           
  1249 ;; *************** function _initCNY *****************
  1250 ;; Defined at:
  1251 ;;		line 8 in file "CNY.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1267 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1268 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1269 ;;Total ram usage:        1 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    2
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text12
  1280  000B30                     __ptext12:
  1281                           	opt stack 0
  1282  000B30                     _initCNY:
  1283                           	opt stack 28
  1284                           
  1285                           ;CNY.c: 9: ADCON1 = 0x0A;
  1286                           
  1287                           ;incstack = 0
  1288  000B30  0E0A               	movlw	10
  1289  000B32  6EC1               	movwf	4033,c	;volatile
  1290                           
  1291                           ;CNY.c: 10: ADCON2 = 0xBE;
  1292  000B34  0EBE               	movlw	190
  1293  000B36  6EC0               	movwf	4032,c	;volatile
  1294                           
  1295                           ;CNY.c: 11: PIR1bits.ADIF = 0;
  1296  000B38  9C9E               	bcf	3998,6,c	;volatile
  1297                           
  1298                           ;CNY.c: 12: PIE1bits.ADIE = 1;
  1299  000B3A  8C9D               	bsf	3997,6,c	;volatile
  1300                           
  1301                           ;CNY.c: 13: ADCON0bits.CHS = channels[actualChannel];
  1302  000B3C  5035               	movf	_actualChannel,w,c
  1303  000B3E  0D01               	mullw	1
  1304  000B40  0E01               	movlw	low _channels
  1305  000B42  24F3               	addwf	prodl,w,c
  1306  000B44  6EF6               	movwf	tblptrl,c
  1307  000B46  0E08               	movlw	high _channels
  1308  000B48  20F4               	addwfc	prodh,w,c
  1309  000B4A  6EF7               	movwf	tblptrh,c
  1310  000B4C                     	if	0	;There are less than 3 active tblptr bytes
  1311  000B4C                     	endif
  1312  000B4C  0008               	tblrd		*
  1313  000B4E  CFF5 F016          	movff	tablat,??_initCNY
  1314  000B52  4616               	rlncf	??_initCNY,f,c
  1315  000B54  4616               	rlncf	??_initCNY,f,c
  1316  000B56  50C2               	movf	4034,w,c	;volatile
  1317  000B58  1816               	xorwf	??_initCNY,w,c
  1318  000B5A  0BC3               	andlw	-61
  1319  000B5C  1816               	xorwf	??_initCNY,w,c
  1320  000B5E  6EC2               	movwf	4034,c	;volatile
  1321                           
  1322                           ;CNY.c: 14: ADCON0bits.ADON = 1;
  1323  000B60  80C2               	bsf	4034,0,c	;volatile
  1324                           
  1325                           ;CNY.c: 15: ADCON0bits.GO = 1;
  1326  000B62  82C2               	bsf	4034,1,c	;volatile
  1327  000B64  0012               	return		;funcret
  1328  000B66                     __end_of_initCNY:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           prodh	equ	0xFF4
  1335                           prodl	equ	0xFF3
  1336                           intcon	equ	0xFF2
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           status	equ	0xFD8
  1340                           
  1341 ;; *************** function _ISR *****************
  1342 ;; Defined at:
  1343 ;;		line 34 in file "main.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1359 ;;      Temps:         18       0       0       0       0       0       0       0       0
  1360 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:       18 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    1
  1364 ;; This function calls:
  1365 ;;		_cnyInterrupt
  1366 ;;		_timerInterrupt
  1367 ;; This function is called by:
  1368 ;;		Interrupt level 2
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	intcode
  1373  000008                     __pintcode:
  1374                           	opt stack 0
  1375  000008                     _ISR:
  1376                           	opt stack 26
  1377                           
  1378                           ;incstack = 0
  1379  000008  8236               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1380  00000A  EDBC  F004         	call	int_func,f	;refresh shadow registers
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           intcon	equ	0xFF2
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           status	equ	0xFD8
  1391                           
  1392                           	psect	intcode_body
  1393  000978                     __pintcode_body:
  1394                           	opt stack 26
  1395  000978                     int_func:
  1396                           	opt stack 26
  1397  000978  0006               	pop		; remove dummy address from shadow register refresh
  1398  00097A  CFFA F004          	movff	pclath,??_ISR
  1399  00097E  CFFB F005          	movff	pclatu,??_ISR+1
  1400  000982  CFE9 F006          	movff	fsr0l,??_ISR+2
  1401  000986  CFEA F007          	movff	fsr0h,??_ISR+3
  1402  00098A  CFE1 F008          	movff	fsr1l,??_ISR+4
  1403  00098E  CFE2 F009          	movff	fsr1h,??_ISR+5
  1404  000992  CFD9 F00A          	movff	fsr2l,??_ISR+6
  1405  000996  CFDA F00B          	movff	fsr2h,??_ISR+7
  1406  00099A  CFF3 F00C          	movff	prodl,??_ISR+8
  1407  00099E  CFF4 F00D          	movff	prodh,??_ISR+9
  1408  0009A2  CFF6 F00E          	movff	tblptrl,??_ISR+10
  1409  0009A6  CFF7 F00F          	movff	tblptrh,??_ISR+11
  1410  0009AA  CFF8 F010          	movff	tblptru,??_ISR+12
  1411  0009AE  CFF5 F011          	movff	tablat,??_ISR+13
  1412  0009B2  C036  F012         	movff	btemp,??_ISR+14
  1413  0009B6  C037  F013         	movff	btemp+1,??_ISR+15
  1414  0009BA  C038  F014         	movff	btemp+2,??_ISR+16
  1415  0009BE  C039  F015         	movff	btemp+3,??_ISR+17
  1416                           
  1417                           ;main.c: 35: timerInterrupt();
  1418  0009C2  ECCB  F005         	call	_timerInterrupt	;wreg free
  1419                           
  1420                           ;main.c: 36: cnyInterrupt();
  1421  0009C6  EC4D  F005         	call	_cnyInterrupt	;wreg free
  1422  0009CA  C015  F039         	movff	??_ISR+17,btemp+3
  1423  0009CE  C014  F038         	movff	??_ISR+16,btemp+2
  1424  0009D2  C013  F037         	movff	??_ISR+15,btemp+1
  1425  0009D6  C012  F036         	movff	??_ISR+14,btemp
  1426  0009DA  C011  FFF5         	movff	??_ISR+13,tablat
  1427  0009DE  C010  FFF8         	movff	??_ISR+12,tblptru
  1428  0009E2  C00F  FFF7         	movff	??_ISR+11,tblptrh
  1429  0009E6  C00E  FFF6         	movff	??_ISR+10,tblptrl
  1430  0009EA  C00D  FFF4         	movff	??_ISR+9,prodh
  1431  0009EE  C00C  FFF3         	movff	??_ISR+8,prodl
  1432  0009F2  C00B  FFDA         	movff	??_ISR+7,fsr2h
  1433  0009F6  C00A  FFD9         	movff	??_ISR+6,fsr2l
  1434  0009FA  C009  FFE2         	movff	??_ISR+5,fsr1h
  1435  0009FE  C008  FFE1         	movff	??_ISR+4,fsr1l
  1436  000A02  C007  FFEA         	movff	??_ISR+3,fsr0h
  1437  000A06  C006  FFE9         	movff	??_ISR+2,fsr0l
  1438  000A0A  C005  FFFB         	movff	??_ISR+1,pclatu
  1439  000A0E  C004  FFFA         	movff	??_ISR,pclath
  1440  000A12  9236               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1441  000A14  0011               	retfie		f
  1442  000A16                     __end_of_ISR:
  1443                           	opt stack 0
  1444                           pclatu	equ	0xFFB
  1445                           pclath	equ	0xFFA
  1446                           tblptru	equ	0xFF8
  1447                           tblptrh	equ	0xFF7
  1448                           tblptrl	equ	0xFF6
  1449                           tablat	equ	0xFF5
  1450                           prodh	equ	0xFF4
  1451                           prodl	equ	0xFF3
  1452                           intcon	equ	0xFF2
  1453                           postinc0	equ	0xFEE
  1454                           fsr0h	equ	0xFEA
  1455                           fsr0l	equ	0xFE9
  1456                           wreg	equ	0xFE8
  1457                           fsr1h	equ	0xFE2
  1458                           fsr1l	equ	0xFE1
  1459                           fsr2h	equ	0xFDA
  1460                           fsr2l	equ	0xFD9
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function _timerInterrupt *****************
  1464 ;; Defined at:
  1465 ;;		line 11 in file "timer.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_ISR
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text14
  1493  000B96                     __ptext14:
  1494                           	opt stack 0
  1495  000B96                     _timerInterrupt:
  1496                           	opt stack 26
  1497                           
  1498                           ;timer.c: 12: if(!INTCONbits.TMR0IF) return;
  1499                           
  1500                           ;incstack = 0
  1501  000B96  A4F2               	btfss	intcon,2,c	;volatile
  1502  000B98  0012               	return	
  1503                           
  1504                           ;timer.c: 13: fractionCounter += 680;
  1505  000B9A  0EA8               	movlw	168
  1506  000B9C  2632               	addwf	_fractionCounter,f,c
  1507  000B9E  0E02               	movlw	2
  1508  000BA0  2233               	addwfc	_fractionCounter+1,f,c
  1509                           
  1510                           ;timer.c: 14: if(1000 <= fractionCounter){
  1511  000BA2  0EE8               	movlw	232
  1512  000BA4  5C32               	subwf	_fractionCounter,w,c
  1513  000BA6  0E03               	movlw	3
  1514  000BA8  5833               	subwfb	_fractionCounter+1,w,c
  1515  000BAA  A0D8               	btfss	status,0,c
  1516  000BAC  D00A               	goto	i2l72
  1517                           
  1518                           ;timer.c: 15: fractionCounter -= 1000;
  1519  000BAE  0EE8               	movlw	232
  1520  000BB0  5E32               	subwf	_fractionCounter,f,c
  1521  000BB2  0E03               	movlw	3
  1522  000BB4  5A33               	subwfb	_fractionCounter+1,f,c
  1523                           
  1524                           ;timer.c: 16: millisCounter++;
  1525  000BB6  0E01               	movlw	1
  1526  000BB8  262E               	addwf	_millisCounter,f,c
  1527  000BBA  0E00               	movlw	0
  1528  000BBC  222F               	addwfc	_millisCounter+1,f,c
  1529  000BBE  2230               	addwfc	_millisCounter+2,f,c
  1530  000BC0  2231               	addwfc	_millisCounter+3,f,c
  1531  000BC2                     i2l72:
  1532                           
  1533                           ;timer.c: 17: }
  1534                           ;timer.c: 18: INTCONbits.TMR0IF = 0;
  1535  000BC2  94F2               	bcf	intcon,2,c	;volatile
  1536  000BC4  0012               	return		;funcret
  1537  000BC6                     __end_of_timerInterrupt:
  1538                           	opt stack 0
  1539                           pclatu	equ	0xFFB
  1540                           pclath	equ	0xFFA
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           prodh	equ	0xFF4
  1546                           prodl	equ	0xFF3
  1547                           intcon	equ	0xFF2
  1548                           postinc0	equ	0xFEE
  1549                           fsr0h	equ	0xFEA
  1550                           fsr0l	equ	0xFE9
  1551                           wreg	equ	0xFE8
  1552                           fsr1h	equ	0xFE2
  1553                           fsr1l	equ	0xFE1
  1554                           fsr2h	equ	0xFDA
  1555                           fsr2l	equ	0xFD9
  1556                           status	equ	0xFD8
  1557                           
  1558 ;; *************** function _cnyInterrupt *****************
  1559 ;; Defined at:
  1560 ;;		line 18 in file "CNY.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1577 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:        3 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_ISR
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text15
  1588  000A9A                     __ptext15:
  1589                           	opt stack 0
  1590  000A9A                     _cnyInterrupt:
  1591                           	opt stack 26
  1592                           
  1593                           ;CNY.c: 19: PIR1bits.ADIF = 0;
  1594                           
  1595                           ;incstack = 0
  1596  000A9A  9C9E               	bcf	3998,6,c	;volatile
  1597                           
  1598                           ;CNY.c: 20: data[actualChannel++] = ADRESH << 8 + ADRESL;
  1599  000A9C  CFC3 F001          	movff	4035,??_cnyInterrupt	;volatile
  1600  000AA0  0E08               	movlw	8
  1601  000AA2  2601               	addwf	??_cnyInterrupt,f,c
  1602  000AA4  50C4               	movf	4036,w,c	;volatile
  1603  000AA6  6E02               	movwf	(??_cnyInterrupt+1)& (0+255),c
  1604  000AA8  6A03               	clrf	(??_cnyInterrupt+2)& (0+255),c
  1605  000AAA  2A01               	incf	??_cnyInterrupt,f,c
  1606  000AAC  D003               	goto	i2u45_44
  1607  000AAE                     i2u45_45:
  1608  000AAE  90D8               	bcf	status,0,c
  1609  000AB0  3602               	rlcf	??_cnyInterrupt+1,f,c
  1610  000AB2  3603               	rlcf	??_cnyInterrupt+2,f,c
  1611  000AB4                     i2u45_44:
  1612  000AB4  2E01               	decfsz	??_cnyInterrupt,f,c
  1613  000AB6  D7FB               	goto	i2u45_45
  1614  000AB8  5035               	movf	_actualChannel,w,c
  1615  000ABA  0D02               	mullw	2
  1616  000ABC  0E24               	movlw	low _data
  1617  000ABE  24F3               	addwf	prodl,w,c
  1618  000AC0  6ED9               	movwf	fsr2l,c
  1619  000AC2  0E00               	movlw	high _data
  1620  000AC4  20F4               	addwfc	prodh,w,c
  1621  000AC6  6EDA               	movwf	fsr2h,c
  1622  000AC8  C002  FFDE         	movff	??_cnyInterrupt+1,postinc2
  1623  000ACC  C003  FFDD         	movff	??_cnyInterrupt+2,postdec2
  1624  000AD0  2A35               	incf	_actualChannel,f,c
  1625                           
  1626                           ;CNY.c: 21: ADCON0bits.CHS = channels[actualChannel];
  1627  000AD2  5035               	movf	_actualChannel,w,c
  1628  000AD4  0D01               	mullw	1
  1629  000AD6  0E01               	movlw	low _channels
  1630  000AD8  24F3               	addwf	prodl,w,c
  1631  000ADA  6EF6               	movwf	tblptrl,c
  1632  000ADC  0E08               	movlw	high _channels
  1633  000ADE  20F4               	addwfc	prodh,w,c
  1634  000AE0  6EF7               	movwf	tblptrh,c
  1635  000AE2                     	if	0	;There are less than 3 active tblptr bytes
  1636  000AE2                     	endif
  1637  000AE2  0008               	tblrd		*
  1638  000AE4  CFF5 F001          	movff	tablat,??_cnyInterrupt
  1639  000AE8  4601               	rlncf	??_cnyInterrupt,f,c
  1640  000AEA  4601               	rlncf	??_cnyInterrupt,f,c
  1641  000AEC  50C2               	movf	4034,w,c	;volatile
  1642  000AEE  1801               	xorwf	??_cnyInterrupt,w,c
  1643  000AF0  0BC3               	andlw	-61
  1644  000AF2  1801               	xorwf	??_cnyInterrupt,w,c
  1645  000AF4  6EC2               	movwf	4034,c	;volatile
  1646                           
  1647                           ;CNY.c: 22: ADCON0bits.GO = 1;
  1648  000AF6  82C2               	bsf	4034,1,c	;volatile
  1649  000AF8  0012               	return		;funcret
  1650  000AFA                     __end_of_cnyInterrupt:
  1651                           	opt stack 0
  1652                           pclatu	equ	0xFFB
  1653                           pclath	equ	0xFFA
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           intcon	equ	0xFF2
  1661                           postinc0	equ	0xFEE
  1662                           fsr0h	equ	0xFEA
  1663                           fsr0l	equ	0xFE9
  1664                           wreg	equ	0xFE8
  1665                           fsr1h	equ	0xFE2
  1666                           fsr1l	equ	0xFE1
  1667                           postinc2	equ	0xFDE
  1668                           postdec2	equ	0xFDD
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           status	equ	0xFD8
  1672                           pclatu	equ	0xFFB
  1673                           pclath	equ	0xFFA
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           prodh	equ	0xFF4
  1679                           prodl	equ	0xFF3
  1680                           intcon	equ	0xFF2
  1681                           postinc0	equ	0xFEE
  1682                           fsr0h	equ	0xFEA
  1683                           fsr0l	equ	0xFE9
  1684                           wreg	equ	0xFE8
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           postinc2	equ	0xFDE
  1688                           postdec2	equ	0xFDD
  1689                           fsr2h	equ	0xFDA
  1690                           fsr2l	equ	0xFD9
  1691                           status	equ	0xFD8
  1692                           
  1693                           	psect	rparam
  1694  0000                     pclatu	equ	0xFFB
  1695                           pclath	equ	0xFFA
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           prodh	equ	0xFF4
  1701                           prodl	equ	0xFF3
  1702                           intcon	equ	0xFF2
  1703                           postinc0	equ	0xFEE
  1704                           fsr0h	equ	0xFEA
  1705                           fsr0l	equ	0xFE9
  1706                           wreg	equ	0xFE8
  1707                           fsr1h	equ	0xFE2
  1708                           fsr1l	equ	0xFE1
  1709                           postinc2	equ	0xFDE
  1710                           postdec2	equ	0xFDD
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715                           	psect	temp
  1716  000036                     btemp:
  1717                           	opt stack 0
  1718  000036                     	ds	1
  1719  0000                     int$flags	set	btemp
  1720  0000                     wtemp6	set	btemp+1
  1721                           pclatu	equ	0xFFB
  1722                           pclath	equ	0xFFA
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           postinc0	equ	0xFEE
  1731                           fsr0h	equ	0xFEA
  1732                           fsr0l	equ	0xFE9
  1733                           wreg	equ	0xFE8
  1734                           fsr1h	equ	0xFE2
  1735                           fsr1l	equ	0xFE1
  1736                           postinc2	equ	0xFDE
  1737                           postdec2	equ	0xFDD
  1738                           fsr2h	equ	0xFDA
  1739                           fsr2l	equ	0xFD9
  1740                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_setMotors
    _setMotors->___awdiv
    _setLEDs->_setLEDG
    _setLEDs->_setLEDR
    _setLEDs->_setLEDY

Critical Paths under _ISR in COMRAM

    _ISR->_cnyInterrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1333
                            _initCNY
                     _initInterrupts
                         _initMotors
                          _initTimer
                             _initUI
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    1333
                            _setLEDs
                          _setMotors
 ---------------------------------------------------------------------------------
 (2) _setMotors                                            6     2      4    1070
                                             29 COMRAM     6     2      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _setLEDs                                              3     1      2     263
                                             22 COMRAM     3     1      2
                            _setLEDG
                            _setLEDR
                            _setLEDY
 ---------------------------------------------------------------------------------
 (3) _setLEDY                                              1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _setLEDR                                              1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _setLEDG                                              1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUI                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCNY                                              1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 18    18      0       0
                                              3 COMRAM    18    18      0
                       _cnyInterrupt
                     _timerInterrupt
 ---------------------------------------------------------------------------------
 (5) _timerInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _cnyInterrupt                                         3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initCNY
   _initInterrupts
   _initMotors
   _initTimer
   _initUI
   _loop
     _setLEDs
       _setLEDG
       _setLEDR
       _setLEDY
     _setMotors
       ___awdiv

 _ISR (ROOT)
   _cnyInterrupt
   _timerInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      35       1       56.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      20        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 10 23:31:41 2018

                     l52 086E                       l53 088E                       l54 08A6  
                     l55 08BE                       l98 0B8C                       l99 0B68  
                     u15 0C3A                       u16 0C3C                       u25 0C2C  
                     u26 0C2E                       u35 0C48                       u36 0C4A  
           ___awdiv@sign 001B              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l109 0BF4                      l340 0A82                      l332 0A2A  
                    l341 0A90                      l333 0A3A                      l335 0A58  
                    l336 0A50                      l339 0A78             __CFG_CPB$OFF 000000  
                    u320 0A5C                      u350 081C                      _PR2 000FCB  
                    u351 0816                      u370 0842             __CFG_CPD$OFF 000000  
                    u435 08C8                      u371 083C                      _ISR 0008  
                    u445 08F8                      u368 081E                      u388 0844  
           __CFG_BOR$OFF 000000                      prod 000FF3                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
         ??_cnyInterrupt 0001                     i2l72 0BC2             __CFG_WDTPS$1 000000  
                   _data 0024                     _main 0BE0                     _loop 0B66  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0036                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___param_bank 000000  
       ??_timerInterrupt 0001           setMotors@right 0020                    ??_ISR 0004  
          __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 0A9A                    ?_loop 0001                    _T0CON 000FD5  
        ___awdiv@divisor 0018                    _T2CON 000FCA          ___awdiv@counter 001A  
          __CFG_USBDIV$2 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initCNY 0B66  
         __CFG_EBTRB$OFF 000000          __end_of_setLEDG 0C4C          __end_of_setLEDR 0C3E  
        __end_of_setLEDY 0C30          __end_of_setLEDs 0C10                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 0037  
         __CFG_PBADEN$ON 000000           __CFG_MCLRE$OFF 000000          __initialization 0BC6  
           __end_of_main 0BFA             __end_of_loop 0B96                   ??_main 0024  
                 ??_loop 0024            __activetblptr 000002                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB         ___awdiv@dividend 0016  
        _fractionCounter 0032         __end_of_channels 0806           __CFG_XINST$OFF 000000  
              ??___awdiv 001A                   _initUI 0C10     __end_of_cnyInterrupt 0AFA  
                 clear_0 0BCC         ___awdiv@quotient 001C                ??_initCNY 0016  
              ??_setLEDG 0016                ??_setLEDR 0016                ??_setLEDY 0016  
              ??_setLEDs 0019             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0BD2            ___rparam_used 000001           __pcstackCOMRAM 0001  
__size_of_initInterrupts 0006       __size_of_initTimer 000A                  ?_initUI 0001  
     __size_of_setMotors 0170                  i2u45_44 0AB4                  i2u45_45 0AAE  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
  __size_of_cnyInterrupt 0060                  ___awdiv 0A16               _initMotors 0AFA  
           __psmallconst 0800          __CFG_STVREN$OFF 000000          __size_of_initUI 0012  
                __pcinit 0BC6                  __ramtop 0800                  __ptext0 0BE0  
                __ptext1 0B66                  __ptext2 0808                  __ptext3 0A16  
                __ptext4 0BFA                  __ptext5 0C22                  __ptext6 0C30  
                __ptext7 0C3E                  __ptext8 0C10                  __ptext9 0C4C  
          _millisCounter 002E             __size_of_ISR 0A0E                  _initCNY 0B30  
      __end_of_initTimer 0C56                  _setLEDG 0C3E                  _setLEDR 0C30  
                _setLEDY 0C22                  _setLEDs 0BFA           __pintcode_body 0978  
   end_of_initialization 0BD2        __end_of_setMotors 0978             _cnyInterrupt 0A9A  
          __Lmediumconst 0000                  int_func 0978                  postdec2 000FDD  
         _initInterrupts 0C56                  postinc0 000FEE                  postinc2 000FDE  
              _PORTBbits 000F81  __size_of_timerInterrupt 0030                _TRISBbits 000F93  
              _TRISCbits 000F94              _CCP1CONbits 000FBD              _CCP2CONbits 000FBA  
 __end_of_initInterrupts 0C5C            setMotors@left 001E              ?_initMotors 0001  
         __end_of_initUI 0C22            _actualChannel 0035      start_initialization 0BC6  
            __end_of_ISR 0A16          ?_initInterrupts 0001         __CFG_LPT1OSC$OFF 000000  
               ??_initUI 0016              __pbssCOMRAM 0024      __size_of_initMotors 0036  
             loop@status 0034                __pintcode 0008                 ?___awdiv 0016  
               ?_initCNY 0001              __smallconst 0800           _timerInterrupt 0B96  
               ?_setLEDG 0001                 ?_setLEDR 0001                 ?_setLEDY 0001  
               ?_setLEDs 0017                _initTimer 0C4C                 _LATBbits 000F8A  
               _LATCbits 000F8B                 _PIE1bits 000F9D                _setMotors 0808  
               _PIR1bits 000F9E   __end_of_timerInterrupt 0BC6               _ADCON0bits 000FC2  
             ?_initTimer 0001               ?_setMotors 001E                 __Hrparam 0000  
               __Lrparam 0000             ??_initMotors 0016         __size_of___awdiv 0084  
        ?_timerInterrupt 0001         __size_of_initCNY 0036                 _channels 0801  
       __size_of_setLEDG 000E         __size_of_setLEDR 000E         __size_of_setLEDY 000E  
       __size_of_setLEDs 0016                 __ptext10 0AFA                 __ptext11 0C56  
               __ptext12 0B30                 __ptext14 0B96                 __ptext15 0A9A  
     __end_of_initMotors 0B30         ??_initInterrupts 0016            __size_of_main 001A  
          __size_of_loop 0030                 int$flags 0036    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 setLEDG@v 0016                 setLEDR@v 0016  
               setLEDY@v 0016              ??_initTimer 0016                 setLEDs@g 0018  
               setLEDs@r 0019                 setLEDs@y 0017                 intlevel2 0000  
            ??_setMotors 0022       __CFG_FOSC$HSPLL_HS 000000            ?_cnyInterrupt 0001  
